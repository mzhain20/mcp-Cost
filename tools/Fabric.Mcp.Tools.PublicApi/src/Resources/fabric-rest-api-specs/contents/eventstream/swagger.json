{
  "swagger": "2.0",
  "info": {
    "title": "Eventstream REST APIs",
    "version": "v1"
  },
  "schemes": [
    "https"
  ],
  "host": "api.fabric.microsoft.com",
  "basePath": "/v1",
  "paths": {
    "/workspaces/{workspaceId}/eventstreams": {
      "get": {
        "summary": "Returns a list of eventstreams from the specified workspace.",
        "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Permissions\n\n The caller must have a *viewer* workspace role. \n\n## Required Delegated Scopes \n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_ListEventstreams",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/Eventstreams"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InvalidItemType - Invalid item type",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List eventstreams in workspace example": {
            "$ref": "./examples/ListEventstreamsInWorkspace.json"
          }
        }
      },
      "post": {
        "summary": "Creates an eventstream in the specified workspace.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\n To create eventstream with definition, refer to [Eventstream definition](/rest/api/fabric/articles/item-management/definitions/eventstream-definition). \n\n ## Permissions \n The caller must have a *contributor* workspace role. \n\n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All \n\n## Limitations \n- To create an eventstream the workspace must be on a supported Fabric capacity. For more information see: [Microsoft Fabric license types](/fabric/enterprise/licenses#microsoft-fabric-license-types).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_CreateEventstream",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "createEventstreamRequest",
            "description": "Create item request payload.",
            "schema": {
              "$ref": "./definitions.json#/definitions/CreateEventstreamRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "./definitions.json#/definitions/Eventstream"
            }
          },
          "202": {
            "description": "Request accepted, eventstream provisioning in progress",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID, used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InvalidItemType - Item type is invalid\n\n* ItemDisplayNameAlreadyInUse - Item display name is already used. \n\n* CorruptedPayload - The provided payload is corrupted. \n\n* WorkspaceItemsLimitExceeded - Workspace item limit exceeded.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create an eventstream example": {
            "$ref": "./examples/CreateEventstream.json"
          },
          "Create an eventstream with public definition example": {
            "$ref": "./examples/CreateEventstreamWithDefinition.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}": {
      "get": {
        "summary": "Returns properties of the specified eventstream.",
        "description": "## Permissions\n\n The caller must have *read* permissions for the eventstream. \n\n## Required Delegated Scopes \n\n Eventstream.Read.All or Eventstream.ReadWrite.All or Item.Read.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_GetEventstream",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/Eventstream"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an eventstream example": {
            "$ref": "./examples/GetEventstream.json"
          }
        }
      },
      "patch": {
        "summary": "Updates the properties of the specified eventstream.",
        "description": "## Permissions\n\n The caller must have *read and write* permissions for the eventstream. \n\n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_UpdateEventstream",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateEventstreamRequest",
            "description": "Update eventstream request payload.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UpdateEventstreamRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/Eventstream"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found. \n\n* InvalidRequest - Invalid update request.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update an eventstream example": {
            "$ref": "./examples/UpdateEventstream.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes the specified eventstream.",
        "description": "## Permissions\n\n The caller must have *write* permissions for the eventstream. \n\n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_DeleteEventstream",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an eventstream example": {
            "$ref": "./examples/DeleteEventstream.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/getDefinition": {
      "post": {
        "summary": "Returns the specified eventstream public definition.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\nWhen you get an eventstream public definition, the sensitivity label is not a part of the definition.\n\n## Permissions\n\n The caller must have *read and write* permissions for the eventstream. \n\n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All \n\n## Limitations\n\n This API is blocked for an eventstream with an encrypted sensitivity label.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_GetEventstreamDefinition",
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "format",
            "description": "The format of the eventstream public definition.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/EventstreamDefinitionResponse"
            }
          },
          "202": {
            "description": "Request accepted. Retrieving the definition is in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID which can be used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* OperationNotSupportedForItem - Operation not supported for requested item.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an eventstream definition example": {
            "$ref": "./examples/GetEventstreamDefinition.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/updateDefinition": {
      "post": {
        "summary": "Updates the definition of a specified eventstream. The update overrides the current definition.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\n \nUpdating the eventstream definition, does not affect its sensitivity label. \n\n## Permissions\n\n The caller must have *read and write* permissions for the eventstream. \n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_UpdateEventstreamDefinition",
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "updateMetadata",
            "description": "Whether to update the item's metadata if it is provided in the `.platform` file. True - Update the metadata if it is provided in the `.platform` file as part of the definition, False - Do not update the metadata.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "updateEventstreamDefinitionRequest",
            "description": "Update eventstream definition request payload.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UpdateEventstreamDefinitionRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "202": {
            "description": "Request accepted. Update definition is in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID which can be used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* OperationNotSupportedForItem - Operation not supported for requested item. \n\n* CorruptedPayload - The provided payload is corrupted.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update an eventstream definition example": {
            "$ref": "./examples/UpdateEventstreamDefinition.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/topology": {
      "get": {
        "summary": "Returns the topology of the specified eventstream.",
        "description": "## Permissions\n\n The caller must have *viewer* or higher workspace role. \n\n## Required Delegated Scopes \n\n Eventstream.Read.All or Eventstream.ReadWrite.All or Item.Read.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Topology"
        ],
        "operationId": "Topology_GetEventstreamTopology",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/topology.json#/definitions/EventstreamTopologyResponse"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an eventstream topology example": {
            "$ref": "./examples/GetEventstreamTopology.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/pause": {
      "post": {
        "summary": "Pause running all supported sources and destinations of the eventstream.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher workspace role. \n\n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Topology"
        ],
        "operationId": "Topology_PauseEventstream",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Pause request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pause running an eventstream example": {
            "$ref": "./examples/PauseEventstream.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/resume": {
      "post": {
        "summary": "Resume running all supported sources and destinations of the eventstream.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher workspace role. \n\n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Topology"
        ],
        "operationId": "Topology_ResumeEventstream",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "resumeEventstreamRequest",
            "description": "Resume running eventstream request payload.",
            "schema": {
              "$ref": "./definitions/common.json#/definitions/DataSourceStartRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Resume request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Resume running an eventstream example": {
            "$ref": "./examples/ResumeEventstream.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/sources/{sourceId}": {
      "get": {
        "summary": "Returns the specified source of the eventstream.",
        "description": "## Permissions\n\n The caller must have *viewer* or higher workspace role. \n\n## Required Delegated Scopes \n\n Eventstream.Read.All or Eventstream.ReadWrite.All or Item.Read.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Topology"
        ],
        "operationId": "Topology_GetEventstreamSource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "sourceId",
            "description": "The source ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/source.json#/definitions/SourceResponse"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an eventstream source example": {
            "$ref": "./examples/GetEventstreamSource.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/destinations/{destinationId}": {
      "get": {
        "summary": "Returns the specified destination of the eventstream.",
        "description": "## Permissions\n\n The caller must have *viewer* or higher workspace role. \n\n## Required Delegated Scopes \n\n Eventstream.Read.All or Eventstream.ReadWrite.All or Item.Read.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Topology"
        ],
        "operationId": "Topology_GetEventstreamDestination",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "destinationId",
            "description": "The destination ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/destination.json#/definitions/DestinationResponse"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an eventstream destination example": {
            "$ref": "./examples/GetEventstreamDestination.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/sources/{sourceId}/connection": {
      "get": {
        "summary": "Returns the connection information of specified source of the eventstream. Only custom endpoints sources are supported.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher workspace role. \n\n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Topology"
        ],
        "operationId": "Topology_GetEventstreamSourceConnection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "sourceId",
            "description": "The source ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/source.json#/definitions/SourceConnectionResponse"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an eventstream source connection example": {
            "$ref": "./examples/GetEventstreamSourceConnection.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/destinations/{destinationId}/connection": {
      "get": {
        "summary": "Returns the connection information of a specified destination of the eventstream. Only custom endpoints destinations are supported.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher workspace role. \n\n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Topology"
        ],
        "operationId": "Topology_GetEventstreamDestinationConnection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "destinationId",
            "description": "The destination ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/destination.json#/definitions/DestinationConnectionResponse"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an eventstream destination connection example": {
            "$ref": "./examples/GetEventstreamDestinationConnection.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/sources/{sourceId}/pause": {
      "post": {
        "summary": "Pause running the specified source in the eventstream.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher workspace role. \n\n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Topology"
        ],
        "operationId": "Topology_PauseEventstreamSource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "sourceId",
            "description": "The eventstream source ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Pause request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pause running an eventstream source example": {
            "$ref": "./examples/PauseEventstreamSource.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/sources/{sourceId}/resume": {
      "post": {
        "summary": "Resume running the specified source in the eventstream.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher workspace role. \n\n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Topology"
        ],
        "operationId": "Topology_ResumeEventstreamSource",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "sourceId",
            "description": "The eventstream source ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "resumeEventstreamSourceRequest",
            "description": "Resume running eventstream source request payload.",
            "schema": {
              "$ref": "./definitions/common.json#/definitions/DataSourceStartRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Resume request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Resume running an eventstream source example": {
            "$ref": "./examples/ResumeEventstreamSource.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/destinations/{destinationId}/pause": {
      "post": {
        "summary": "Pause running the specified destination in the eventstream.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher workspace role. \n\n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Topology"
        ],
        "operationId": "Topology_PauseEventstreamDestination",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "destinationId",
            "description": "The eventstream destination ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Pause request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Pause running an eventstream destination example": {
            "$ref": "./examples/PauseEventstreamDestination.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/eventstreams/{eventstreamId}/destinations/{destinationId}/resume": {
      "post": {
        "summary": "Resume running the specified destination in the eventstream.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher workspace role. \n\n## Required Delegated Scopes \n\n Eventstream.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Topology"
        ],
        "operationId": "Topology_ResumeEventstreamDestination",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "eventstreamId",
            "description": "The eventstream ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "destinationId",
            "description": "The eventstream destination ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "resumeEventstreamDestinationRequest",
            "description": "Resume running eventstream destination request payload.",
            "schema": {
              "$ref": "./definitions/common.json#/definitions/DataSourceStartRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Resume request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Resume running an eventstream destination example": {
            "$ref": "./examples/ResumeEventstreamDestination.json"
          }
        }
      }
    }
  },
  "responses": {},
  "security": [],
  "tags": []
}