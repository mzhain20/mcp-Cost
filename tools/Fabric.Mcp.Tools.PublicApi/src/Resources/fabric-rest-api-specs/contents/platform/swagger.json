{
  "swagger": "2.0",
  "info": {
    "title": "Platform REST APIs",
    "version": "v1"
  },
  "schemes": [
    "https"
  ],
  "host": "api.fabric.microsoft.com",
  "basePath": "/v1",
  "paths": {
    "/workspaces": {
      "post": {
        "summary": "Creates a new workspace.",
        "description": "## Permissions\n\n- The caller must have permission to create workspaces granted by Fabric administrator. For more information see: [create workspaces](/fabric/admin/portal-workspace#create-workspaces-new-workspace-experience).\n- The caller must have *contributor* permissions or be an Admin on the capacity. For more information, see: [capacity user permissions](/power-bi/enterprise/service-admin-premium-manage#manage-user-permissions).\n- Service Principals must have permission granted by Fabric administrator. For more information see: [Service principals can create workspaces, connections, and deployment pipelines](/fabric/admin/service-admin-portal-developer#service-principals-can-create-workspaces-connections-and-deployment-pipelines). \n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_CreateWorkspace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createWorkspaceRequest",
            "description": "Create workspace request payload.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/CreateWorkspaceRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created.",
            "headers": {
              "Location": {
                "description": "The URL of the newly created workspace.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a workspace example": {
            "$ref": "./examples/platform/CreateWorkspaceRequiredOnly.json"
          }
        }
      },
      "get": {
        "summary": "Returns a list of workspaces the principal can access. Use the roles query parameter to filter results by the principal workspace role.",
        "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Required Delegated Scopes\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_ListWorkspaces",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "roles",
            "description": "A list of [roles](/power-bi/collaborate-share/service-roles-new-workspaces#workspace-roles). Separate values using a comma. If not provided, all workspaces are returned.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/Workspaces"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InvalidParameter - Invalid workspace role.\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List workspaces example": {
            "$ref": "./examples/platform/ListWorkspaces.json"
          },
          "List workspaces with roles filter example": {
            "$ref": "./examples/platform/ListWorkspacesWithWorkspaceRoleFilter.json"
          },
          "List workspaces with continuation example": {
            "$ref": "./examples/platform/ListWorkspacesWithContinuation.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}": {
      "get": {
        "summary": "Returns specified workspace information.",
        "description": "## Permissions\n\n The caller must have *viewer* or higher workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_GetWorkspace",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/WorkspaceInfo"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a workspace example": {
            "$ref": "./examples/platform/GetWorkspace.json"
          }
        }
      },
      "patch": {
        "summary": "Updates the specified workspace properties.",
        "description": "## Permissions\n\nThe caller must have *admin* workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_UpdateWorkspace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateWorkspaceRequest",
            "description": "Update workspace request payload.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/UpdateWorkspaceRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/Workspace"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a workspace example": {
            "$ref": "./examples/platform/UpdateWorkspace.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes the specified workspace and the items under it.",
        "description": "## Permissions\n\nThe caller must have *admin* workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_DeleteWorkspace",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a workspace example": {
            "$ref": "./examples/platform/DeleteWorkspace.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/roleAssignments": {
      "post": {
        "summary": "Adds a workspace role assignment.",
        "description": "To get the principal user object ID required for request body, see [Find the user object ID](/partner-center/find-ids-and-domain-names#find-the-user-object-id).\n\n## Permissions\n\n- The caller must have *member* or higher workspace role. \n- Members can add members or others with lower permissions. For more information see: [workspace roles](/power-bi/collaborate-share/service-roles-new-workspaces#workspace-roles).\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_AddWorkspaceRoleAssignment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "workspaceRoleAssignmentRequest",
            "description": "Add workspace role assignment request payload.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/AddWorkspaceRoleAssignmentRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created.",
            "headers": {
              "Location": {
                "description": "The URL of the newly created workspace role assignment.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/WorkspaceRoleAssignment"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Add workspace role assignment example": {
            "$ref": "./examples/platform/AddWorkspaceRoleAssignment.json"
          }
        }
      },
      "get": {
        "summary": "Returns a list of workspace role assignments.",
        "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Permissions\n\n The caller must have *member* or higher workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_ListWorkspaceRoleAssignments",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/WorkspaceRoleAssignments"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get workspace role assignments example": {
            "$ref": "./examples/platform/GetWorkspaceRoleAssignments.json"
          },
          "Get workspace role assignments with continuation example": {
            "$ref": "./examples/platform/GetWorkspaceRoleAssignmentsWithContinuation.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/roleAssignments/{workspaceRoleAssignmentId}": {
      "delete": {
        "summary": "Deletes the specified workspace role assignment.",
        "description": "The role assignment of the last admin can't be deleted.\n\n## Permissions\n\n The caller must have *admin* workspace role.\n\n## Required Delegated Scopes\n\n Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_DeleteWorkspaceRoleAssignment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "workspaceRoleAssignmentId",
            "description": "The workspace role assignment ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete workspace role assignment example": {
            "$ref": "./examples/platform/DeleteWorkspaceRoleAssignment.json"
          }
        }
      },
      "patch": {
        "summary": "Updates a workspace role assignment.",
        "description": "The role assignment of the last admin can't be changed.\n\n## Permissions\n\nThe caller must have *admin* role on the workspace.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_UpdateWorkspaceRoleAssignment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "workspaceRoleAssignmentId",
            "description": "The workspace role assignment ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateWorkspaceRoleAssignmentRequest",
            "description": "Update workspace role assignment request payload.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/UpdateWorkspaceRoleAssignmentRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/WorkspaceRoleAssignment"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update workspace role assignment example": {
            "$ref": "./examples/platform/UpdateWorkspaceRoleAssignment.json"
          }
        }
      },
      "get": {
        "summary": "Returns information of a workspace role assignment.",
        "description": "## Permissions\n\n The caller must have *member* or higher role on the workspace.\n\n## Required Delegated Scopes\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_GetWorkspaceRoleAssignment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "workspaceRoleAssignmentId",
            "description": "The workspace role assignment ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/WorkspaceRoleAssignment"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get workspace role assignment example": {
            "$ref": "./examples/platform/GetWorkspaceRoleAssignment.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items": {
      "get": {
        "summary": "Returns a list of items from the specified workspace.",
        "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Permissions\n\n The caller must have a *viewer* workspace role. \n\n## Required Delegated Scopes\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_ListItems",
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The item's type.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "recursive",
            "description": "Lists items in a folder and its nested folders, or just a folder only. True - All items in the folder and its nested folders are listed, False - Only items in the folder are listed. The default value is true.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "rootFolderId",
            "description": "This parameter allows users to filter items based on a specific root folder. If not provided, the workspace is used as the root folder.",
            "type": "string",
            "format": "uuid",
            "required": false
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/Items"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InvalidItemType - Invalid item type.\n\n* FolderNotFound - Could not find the requested folder.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all items in workspace example": {
            "$ref": "./examples/platform/ListItemsInWorkspace.json"
          },
          "List all items in workspace by type query parameter example": {
            "$ref": "./examples/platform/ListItemsInWorkspaceByType.json"
          },
          "List direct items in workspace example": {
            "$ref": "./examples/platform/ListDirectItemsInWorkspace.json"
          },
          "List all items in a specific folder example": {
            "$ref": "./examples/platform/ListAllItemsInFolder.json"
          },
          "List direct items in a specific folder example": {
            "$ref": "./examples/platform/ListDirectItemsInFolder.json"
          },
          "List items in workspace with continuation example": {
            "$ref": "./examples/platform/ListItemsInWorkspaceWithContinuation.json"
          }
        }
      },
      "post": {
        "summary": "Creates an item in the specified workspace.",
        "description": "This API is supported for a number of item types, find the supported item types in [Item management overview](/rest/api/fabric/articles/item-management/item-management-overview). You can use [Get item definition API](/rest/api/fabric/core/items/get-item-definition) to get an item definition. \n\nThis API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\n ## Permissions \n The caller must have a *contributor* workspace role.\n\n## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.ReadWrite.All \n- Specific scope: *itemType*.ReadWrite.All (for example: Notebook.ReadWrite.All) \n\n for more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes). \n\n## Limitations \n- To create a non-PowerBI Fabric item the workspace must be on a supported Fabric capacity. For more information see [Microsoft Fabric license types](/fabric/enterprise/licenses#microsoft-fabric-license-types). \n- To create a PowerBI item, the user must have the appropriate license. For more information see [Microsoft Fabric license types](/fabric/enterprise/licenses#microsoft-fabric-license-types). \n- When creating an item, use either `creationPayload` or `definition`, but do not use both at the same time. \n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | When the item type in the call is supported. Check the corresponding API for the item type you're calling, to see if your call is supported. For example, semantic models are supported. |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_CreateItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "createItemRequest",
            "description": "Create item request payload.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/CreateItemRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/Item"
            }
          },
          "202": {
            "description": "Request accepted, item provisioning in progress",
            "headers": {
              "Location": {
                "description": "The URL of the operation status which tracks the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InvalidItemType - Item type is invalid.\n\n* ItemDisplayNameAlreadyInUse - Item display name is already used.\n\n* CorruptedPayload - The provided payload is corrupted.\n\n* FolderNotFound - Could not find the requested folder.\n\n* WorkspaceItemsLimitExceeded - Workspace item limit exceeded.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create an item example": {
            "$ref": "./examples/platform/CreateItemRequiredOnly.json"
          },
          "Create an item in folder example": {
            "$ref": "./examples/platform/CreateItemInFolder.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}": {
      "get": {
        "summary": "Returns properties of the specified item.",
        "description": "This API is supported for a number of item types, find the supported item types in [Item management overview](/rest/api/fabric/articles/item-management/item-management-overview). \n\nFor retrieving additional type specific properties, refer to the get API reference page of the specific item type.\n\n## Permissions\n\n The caller must have *read* permissions for the item. \n\n## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.Read.All or Item.ReadWrite.All \n- Specific scope: *itemType*.Read.All or *itemType*.ReadWrite.All (for example: Notebook.ReadWrite.All) \n\n for more information about scopes, see: [scopes article](/rest/api/fabric/articles/scopes).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_GetItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/Item"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an item example": {
            "$ref": "./examples/platform/GetItem.json"
          }
        }
      },
      "patch": {
        "summary": "Updates the properties of the specified item.",
        "description": "This API is supported for a number of item types, find the supported item types and information about their definition structure in [Item management overview](/rest/api/fabric/articles/item-management/item-management-overview).\n\n## Permissions\n\n The caller must have *read and write* permissions for the item.\n\n## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.ReadWrite.All \n- Specific scope: *itemType*.ReadWrite.All (for example: Notebook.ReadWrite.All) \n\n for more information about scopes, see: [scopes article](/rest/api/fabric/articles/scopes).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | When the item type in the call is supported. Check the corresponding API for the item type you're calling, to see if your call is supported. For example, semantic models are supported. |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_UpdateItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateItemRequest",
            "description": "Update item request payload.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/UpdateItemRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/Item"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.\n\n* InvalidRequest - Invalid update request.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update an item example": {
            "$ref": "./examples/platform/UpdateItem.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes the specified item.",
        "description": "This API is supported for a number of item types, find the supported item types and information about their definition structure in [Item management overview](/rest/api/fabric/articles/item-management/item-management-overview). \n\n## Permissions\n\n The caller must have *write* permissions for the item.\n\n## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.ReadWrite.All \n- Specific scope: *itemType*.ReadWrite.All (for example: Notebook.ReadWrite.All) \n\n for more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | When the item type in the call is supported. Check the corresponding API for the item type you're calling, to see if your call is supported. For example, semantic models are supported. |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_DeleteItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete an item example": {
            "$ref": "./examples/platform/DeleteItem.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/getDefinition": {
      "post": {
        "summary": "Returns the specified item definition.",
        "description": "This API is supported for a number of item types, find the supported item types and information about their definition structure in [Item definition overview](/rest/api/fabric/articles/item-management/definitions/item-definition-overview).\nWhen you get an item's definition, the sensitivity label is not a part of the definition.\n\nThis API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\n## Permissions\n\n The caller must have *read and write* permissions for the item. \n\n## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.ReadWrite.All \n- Specific scope: *itemType*.ReadWrite.All (for example: Notebook.ReadWrite.All) \n\n for more information about scopes, see [Scopes article](/rest/api/fabric/articles/scopes). \n\n## Limitations\n\n This API is blocked for an item with a protected sensitivity label, unless the caller has the usage rights to delete the sensitivity label. \n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | When the item type in the call is supported. Check the corresponding API for the item type you're calling, to see if your call is supported. For example, semantic models are supported. |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_GetItemDefinition",
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "format",
            "description": "The format of the item definition.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/ItemDefinitionResponse"
            }
          },
          "202": {
            "description": "Request accepted. Retrieving the definition is in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID which can be used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* OperationNotSupportedForItem - Operation not supported for requested item.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get an item definition example": {
            "$ref": "./examples/platform/GetItemDefinition.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/updateDefinition": {
      "post": {
        "summary": "Overrides the definition for the specified item.",
        "description": "This API is supported for a number of item types, find the supported item types and information about their definition structure in [Item definition overview](/rest/api/fabric/articles/item-management/definitions/item-definition-overview).\nUpdating the item's definition, does not affect its sensitivity label. \n\nThis API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\n## Permissions\n\n The caller must have *read and write* permissions for the item.\n## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.ReadWrite.All \n- Specific scope: *itemType*.ReadWrite.All (for example: Notebook.ReadWrite.All) \n\n for more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | When the item type in the call is supported. Check the corresponding API for the item type you're calling, to see if your call is supported. For example, semantic models are supported. |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_UpdateItemDefinition",
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "updateMetadata",
            "description": "When set to true and the .platform file is provided as part of the definition, the item's metadata is updated using the metadata in the .platform file",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "updateItemDefinitionRequest",
            "description": "Update item definition request payload.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/UpdateItemDefinitionRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "202": {
            "description": "Request accepted. Update definition is in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* OperationNotSupportedForItem - Operation not supported for requested item.\n\n* CorruptedPayload - The provided payload is corrupted.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update an item definition example": {
            "$ref": "./examples/platform/UpdateItemDefinition.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/jobs/{jobType}/schedules": {
      "get": {
        "summary": "Get scheduling settings for one specific item.",
        "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.ReadWrite.All or Item.Read.All \n- Specific scope: *itemType*.ReadWrite.All or *itemType*.Read.All (for example: Notebook.ReadWrite.All) \n\n for more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "JobScheduler"
        ],
        "operationId": "JobScheduler_ListItemSchedules",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "jobType",
            "description": "The job type.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all item schedules.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/ItemSchedules"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InsufficientPrivileges - The caller does not have sufficient permissions to access the item\n\n* ItemNotFound - Requested item id not found",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List item schedules example": {
            "$ref": "./examples/platform/ListItemSchedules.json"
          }
        }
      },
      "post": {
        "summary": "Create a new schedule for an item. An item can create maximum 20 schedulers.",
        "description": "## Required Delegated Scopes: \n\nItem.Execute.All and Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "JobScheduler"
        ],
        "operationId": "JobScheduler_CreateItemSchedule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "jobType",
            "description": "The job type.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "createScheduleRequest",
            "description": "A item schedule create request.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/CreateScheduleRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully create the schedule.",
            "headers": {
              "Location": {
                "description": "The URL of the newly created schedule.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/ItemSchedule"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InsufficientPrivileges - The caller does not have sufficient permissions to access the item\n\n* ItemNotFound - Requested item id not found\n\n* ScheduleExceedsLimit - The number of created schedules for the item exceeds the limit",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "create item schedule example": {
            "$ref": "./examples/platform/CreateItemSchedule.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/jobs/{jobType}/schedules/{scheduleId}": {
      "get": {
        "summary": "Get an existing schedule for an item.",
        "description": "## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.Read.All or Item.ReadWrite.All\n- Specific scope: *itemType*.Read.All or *itemType*.ReadWrite.All (for example: Notebook.Read.All) \n\n for more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "JobScheduler"
        ],
        "operationId": "JobScheduler_GetItemSchedule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "jobType",
            "description": "The job type.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "scheduleId",
            "description": "The item schedule ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully get the schedule.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/ItemSchedule"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InsufficientPrivileges - The caller does not have sufficient permissions to access the item\n\n* ItemNotFound - Requested item id not found",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "get item schedule example": {
            "$ref": "./examples/platform/GetItemSchedule.json"
          }
        }
      },
      "patch": {
        "summary": "Update an existing schedule for an item.",
        "description": "## Required Delegated Scopes: \n\nItem.Execute.All and Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "JobScheduler"
        ],
        "operationId": "JobScheduler_UpdateItemSchedule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "jobType",
            "description": "The job type.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "scheduleId",
            "description": "The item schedule ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateScheduleRequest",
            "description": "A item schedule update request.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/UpdateScheduleRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully update the schedule.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/ItemSchedule"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InsufficientPrivileges - The caller does not have sufficient permissions to access the item\n\n* ItemNotFound - Requested item id not found",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "update item schedule plan example": {
            "$ref": "./examples/platform/UpdateItemSchedule.json"
          }
        }
      },
      "delete": {
        "summary": "Delete an existing schedule for an item.",
        "description": "## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.ReadWrite.All\n- Specific scope: *itemType*.ReadWrite.All (for example: Notebook.ReadWrite.All) \n\n for more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "JobScheduler"
        ],
        "operationId": "JobScheduler_DeleteItemSchedule",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "jobType",
            "description": "The job type.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "scheduleId",
            "description": "The item schedule ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* InsufficientPrivileges - The caller does not have sufficient permissions to access the item\n\n* ItemNotFound - Requested item ID not found",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "delete item schedule example": {
            "$ref": "./examples/platform/DeleteItemSchedule.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/jobs/instances/{jobInstanceId}": {
      "get": {
        "summary": "Get one item's job instance.",
        "description": "## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.ReadWrite.All or Item.Read.All \n- Specific scope: *itemType*.ReadWrite.All or *itemType*.Read.All (for example: Notebook.ReadWrite.All) \n\n for more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "JobScheduler"
        ],
        "operationId": "JobScheduler_GetItemJobInstance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "jobInstanceId",
            "description": "The job instance ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/ItemJobInstance"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InsufficientPrivileges - The caller does not have sufficient permissions to access the item.\n\n* ItemNotFound - Requested item id not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get item job instance example": {
            "$ref": "./examples/platform/GetItemJobInstance.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/jobs/instances": {
      "get": {
        "summary": "Returns a list of job instances for the specified item.",
        "description": "## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.ReadWrite.All or Item.Read.All \n- Specific scope: *itemType*.ReadWrite.All or *itemType*.Read.All (for example: Notebook.ReadWrite.All) \n\n for more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Limitations\n\n-  Most items have a limit of 100 recently completed entities, and there is not limit for active entities.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "JobScheduler"
        ],
        "operationId": "JobScheduler_ListItemJobInstances",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/ItemJobInstances"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InsufficientPrivileges - The caller does not have sufficient permissions to access the item.\n\n* ItemNotFound - Requested item id not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List item job instances example": {
            "$ref": "./examples/platform/ListItemJobInstances.json"
          },
          "List item job instances with continuation example": {
            "$ref": "./examples/platform/ListItemJobInstancesWithContinuation.json"
          }
        }
      },
      "post": {
        "summary": "Run on-demand item job instance.",
        "description": "## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.Execute.All \n- Specific scope: *itemType*.Execute.All (for example: Notebook.Execute.All) \n\n for more information about scopes, see: [scopes article](/rest/api/fabric/articles/scopes).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "JobScheduler"
        ],
        "operationId": "JobScheduler_RunOnDemandItemJob",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "jobType",
            "description": "Job type",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "runOnDemandItemJobRequest",
            "description": "Run on-demand item job request payload.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/RunOnDemandItemJobRequest"
            },
            "required": false
          }
        ],
        "responses": {
          "202": {
            "description": "Request accepted, job execution is in progress.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to the job instance resource"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request"
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InsufficientPrivileges - The caller does not have sufficient permissions to run job instance.\n\n* InvalidJobType - The requested job type is invalid.\n\n* TooManyRequestsForJobs - The caller requests too many on-demand job requests.\n\n* ItemNotFound - Requested item ID not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Run item job instance with no request body example": {
            "$ref": "./examples/platform/RunOnDemandItemJob.json"
          },
          "Run item job instance with request body containing executionData example": {
            "$ref": "./examples/platform/RunOnDemandItemJob2.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/jobs/instances/{jobInstanceId}/cancel": {
      "post": {
        "summary": "Cancel an item's job instance.",
        "description": "## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.Execute.All \n- Specific scope: *itemType*.Execute.All (for example: Notebook.Execute.All) \n\n for more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "JobScheduler"
        ],
        "operationId": "JobScheduler_CancelItemJobInstance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "jobInstanceId",
            "description": "The job instance ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Request accepted, canceling a job is in progress.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to the job instance resource."
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InsufficientPrivileges - The caller does not have sufficient permissions to cancel job instance.\n\n* ItemNotFound - Requested item id not found.\n\n* JobAlreadyCompleted - Requested cancellation can not take be processed as job instance run has completed.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Cancel item job instance example": {
            "$ref": "./examples/platform/CancelItemJobInstance.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/assignToCapacity": {
      "post": {
        "summary": "Assigns the specified workspace to the specified capacity.",
        "description": "## Permissions\n\n- The caller must have *contributor* permissions or be an capacity Admin. \n- The caller must have *admin* workspace role.\n\n## Required Scope\n\nCapacity.ReadWrite.All and Workspace.ReadWrite.All\n\n## Limitations \n\n- Fabric items (non-PowerBI) don't support migration across region. For more information see [moving data around](/fabric/admin/portal-workspaces#moving-data-around). \n- Workspaces with Fabric items (non-PowerBI) can only be assigned to Fabric, Fabric trial or Power BI Premium capacity. For more information see [Microsoft Fabric license types](/fabric/enterprise/licenses#microsoft-fabric-license-types).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_AssignToCapacity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "assignWorkspaceToCapacityRequest",
            "description": "Assign to capacity parameters",
            "required": true,
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/AssignWorkspaceToCapacityRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request accepted, assignment is in progress."
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Assign a workspace to capacity example": {
            "$ref": "./examples/platform/AssignWorkspaceToCapacity.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/unassignFromCapacity": {
      "post": {
        "summary": "Unassigns the specified workspace from capacity.",
        "description": "## Permissions\n\n The caller must have *admin* role on the workspace. \n\n## Required Delegated Scopes\n\nCapacity.ReadWrite.All and Workspace.ReadWrite.All\n\n## Limitations \n\n Workspaces with Fabric items (non-PowerBI) cannot be unassigned from capacity of supported type. For more information see: [moving data around](/fabric/admin/portal-workspaces#moving-data-around).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_UnassignFromCapacity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Request accepted, unassignment is in progress."
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Assign a workspace to capacity example": {
            "$ref": "./examples/platform/UnassignWorkspaceFromCapacity.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/git/connection": {
      "get": {
        "summary": "Returns git connection details for the specified workspace.",
        "description": "## Permissions\n\nThe caller must have a *contributor* or higher workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Git"
        ],
        "operationId": "Git_GetConnection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/gitIntegration.json#/definitions/GitConnection"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.\n\n* InsufficientPrivileges - The caller does not have sufficient workspace permissions.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Git connection details example": {
            "$ref": "./examples/gitIntegration/GetConnection.json"
          },
          "Workspace not connected to git example": {
            "$ref": "./examples/gitIntegration/GetConnection_NotConnected.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/git/connect": {
      "post": {
        "summary": "Connect a specific workspace to a git repository and branch.",
        "description": "This operation does not sync between the workspace and the connected branch. To complete the sync, use the [Initialize Connection](/rest/api/fabric/core/git/initialize-connection) operation and follow with either the [Commit To Git](/rest/api/fabric/core/git/commit-to-git) or the [Update From Git](/rest/api/fabric/core/git/update-from-git) operation.\n\nTo get started with GitHub, see: [Get started with Git integration](/fabric/cicd/git-integration/git-get-started?tabs=github).\n\nTo get the connection ID, see [Automate Git integration](/fabric/cicd/git-integration/git-automation#get-or-create-git-provider-credentials-connection).\n\n## Permissions\n\nThe caller must have an *admin* role for the workspace.\n\nFor configured connection Git credentials, the caller must have permission for the connection.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Not supported when the Git provider is AzureDevOps and credentials are Automatic |\n\n## Interface",
        "tags": [
          "Git"
        ],
        "operationId": "Git_Connect",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "gitConnectRequest",
            "description": "Connect to the Git request payload.",
            "schema": {
              "$ref": "./definitions/gitIntegration.json#/definitions/GitConnectRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.\n\n* WorkspaceAlreadyConnectedToGit - Workspace is already connected to git.\n\n* WorkspaceHasNoCapacityAssigned - No capacity assigned to workspace.\n\n* InsufficientPrivileges - Caller has insufficient workspace permissions.\n\n* PrincipalTypeNotSupported - Caller identity type is not supported.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Connect a workspace to Azure DevOps example": {
            "$ref": "./examples/gitIntegration/ConnectToAzureDevOps.json"
          },
          "Connect a workspace to Azure DevOps using configured connection example": {
            "$ref": "./examples/gitIntegration/ConnectToAzureDevOpsUsingConfiguredConnection.json"
          },
          "Connect a workspace to GitHub example": {
            "$ref": "./examples/gitIntegration/ConnectToGitHub.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/git/disconnect": {
      "post": {
        "summary": "Disconnect a specific workspace from the Git repository and branch it is connected to.",
        "description": "## Permissions\n\nThe caller must have an *admin* workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Git"
        ],
        "operationId": "Git_Disconnect",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.\n\n* WorkspaceNotConnectedToGit - Workspace is not connected to git.\n\n* InsufficientPrivileges - Caller has insufficient workspace permissions.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Disconnect a workspace from a Git example": {
            "$ref": "./examples/gitIntegration/Disconnect.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/git/initializeConnection": {
      "post": {
        "summary": "Initialize a connection for a workspace that's connected to Git.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\nTo use this API, the caller's Git credentials must be configured using [Update My Git Credentials](/rest/api/fabric/core/git/update-my-git-credentials) API. You can use the [Get My Git Credentials](/rest/api/fabric/core/git/get-my-git-credentials) API to check the Git credentials configuration.\n\nThis API should be called after a successful call to the [Connect](/rest/api/fabric/core/git/connect) API. To complete a full sync of the workspace, use the [Required Action](initialize-connection#requiredaction) operation to call the relevant sync operation, either [Commit To Git](/rest/api/fabric/core/git/commit-to-git) or [Update From Git](/rest/api/fabric/core/git/update-from-git).\n\n## Permissions\n\nThe caller must have an *admin* workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) |\n\n## Interface",
        "tags": [
          "Git"
        ],
        "operationId": "Git_InitializeConnection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "gitInitializeConnectionRequest",
            "description": "Initialize the connection request payload.",
            "schema": {
              "$ref": "./definitions/gitIntegration.json#/definitions/InitializeGitConnectionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/gitIntegration.json#/definitions/InitializeGitConnectionResponse"
            }
          },
          "202": {
            "description": "Request accepted, initialize connection in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID which can be used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* WorkspaceNotConnectedToGit - Workspace is not connected to git.\n\n* WorkspaceHasNoCapacityAssigned - No capacity assigned to Workspace.\n\n* MissingInitializationPolicy - Initialization policy is missing.\n\n* InsufficientPrivileges - The caller does not have sufficient permissions on the workspace.\n\n* PrincipalTypeNotSupported - Caller identity type is not supported.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Initialize the connection of a workspace connected to a Git example": {
            "$ref": "./examples/gitIntegration/InitializeConnection.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/git/updateFromGit": {
      "post": {
        "summary": "Updates the workspace with commits pushed to the connected branch.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\nTo use this API, the caller's Git credentials must be configured using [Update My Git Credentials](/rest/api/fabric/core/git/update-my-git-credentials) API. You can use the [Get My Git Credentials](/rest/api/fabric/core/git/get-my-git-credentials) API to check the Git credentials configuration.\n\nThe update only affects items in the workspace that were changed in those commits. If called after the [Connect](/rest/api/fabric/core/git/connect) and [Initialize Connection](/rest/api/fabric/core/git/initialize-connection) APIs, it will perform a full update of the entire workspace.\n\n## Permissions\n\nThe caller must have a *contributor* or higher workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.GitUpdate.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Only supported when all the [items](/rest/api/fabric/articles/item-management/item-management-overview) involved in the operation support service principals |\n\n## Interface",
        "tags": [
          "Git"
        ],
        "operationId": "Git_UpdateFromGit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateFromGitRequest",
            "description": "Update from a Git request payload.",
            "schema": {
              "$ref": "./definitions/gitIntegration.json#/definitions/UpdateFromGitRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "202": {
            "description": "Request accepted, update from Git in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID which can be used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* WorkspaceNotConnectedToGit - Workspace is not connected to git.\n\n* WorkspaceHasNoCapacityAssigned -  No capacity assigned to workspace.\n\n* WorkspaceHeadMismatch - Head in the request doesn't match the head in the system.\n\n* WorkspacePreviousOperationInProgress - Previous operation is still in progress.\n\n* MissingDependency - A dependency is missing in the update operation.\n\n* PotentialDuplicateDisplayNameAndType - Update operation will create a duplicate display name and type.\n\n* DependencyDeletionFailed - Update operation will delete hard dependency.\n\n* InsufficientPrivileges - The caller does not have sufficient workspace permissions.\n\n* PrincipalTypeNotSupported - Caller identity type is not supported.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a workspace using data from a Git example": {
            "$ref": "./examples/gitIntegration/UpdateFromGit.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/git/status": {
      "get": {
        "summary": "Returns the `Git status` of items in the workspace, that can be committed to Git.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\nThe status indicates changes to items since the last workspace and remote branch sync. If the remote and workspace items were both modified, the API flags a conflict.\n\nTo use this API, the caller's Git credentials must be configured using [Update My Git Credentials](/rest/api/fabric/core/git/update-my-git-credentials) API. You can use the [Get My Git Credentials](/rest/api/fabric/core/git/get-my-git-credentials) API to check the Git credentials configuration.\n\n## Permissions\n\nThe caller must have a *contributor* or higher workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.GitUpdate.All or Workspace.GitCommit.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) |\n\n## Interface",
        "tags": [
          "Git"
        ],
        "operationId": "Git_GetStatus",
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/gitIntegration.json#/definitions/GitStatusResponse"
            }
          },
          "202": {
            "description": "Request accepted, get status in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* WorkspaceNotConnectedToGit - Workspace is not connected to git.\n\n* WorkspaceHasNoCapacityAssigned - Workspace is not on capacity.\n\n* InsufficientPrivileges - The caller does not have sufficient workspace permissions.\n\n* PrincipalTypeNotSupported - Caller identity type is not supported.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get status example": {
            "$ref": "./examples/gitIntegration/GetStatus.json"
          },
          "Get status no changes example": {
            "$ref": "./examples/gitIntegration/GetStatus_NoChanges.json"
          },
          "Get status with conflict example": {
            "$ref": "./examples/gitIntegration/GetStatus_Conflict.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/git/commitToGit": {
      "post": {
        "summary": "Commits the changes made in the workspace to the connected remote branch.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\nTo use this API, the caller's Git credentials must be configured using [Update My Git Credentials](/rest/api/fabric/core/git/update-my-git-credentials) API. You can use the [Get My Git Credentials](/rest/api/fabric/core/git/get-my-git-credentials) API to check the Git credentials configuration.\n\nYou can choose to commit all changes or only specific changed items. To sync the workspace for the first time, use this API after the [Connect](/rest/api/fabric/core/git/connect) and [Initialize Connection](/rest/api/fabric/core/git/initialize-connection) APIs.\n\n## Permissions\n\nThe caller must have a *contributor* or higher workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.GitCommit.All.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Only supported when all the [items](/rest/api/fabric/articles/item-management/item-management-overview) involved in the operation support service principals |\n\n## Interface",
        "tags": [
          "Git"
        ],
        "operationId": "Git_CommitToGit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "commitToGitRequest",
            "description": "Commit to the Git request payload.",
            "schema": {
              "$ref": "./definitions/gitIntegration.json#/definitions/CommitToGitRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "202": {
            "description": "Request accepted, commit to Git in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* WorkspaceNotConnectedToGit - Workspace is not connected to git.\n\n* WorkspaceHasNoCapacityAssigned - No capacity assinged to workspace.\n\n* WorkspaceHeadMismatch - Head in the request doesn't match the head in the system.\n\n* WorkspacePreviousOperationInProgress - Previous operation is still in progress.\n\n* InsufficientPrivileges - The caller does not have sufficient workspace permissions.\n\n* PrincipalTypeNotSupported - Caller identity type is not supported.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Commit all to Git example": {
            "$ref": "./examples/gitIntegration/CommitToGit_All.json"
          },
          "Commit selective items to Git example": {
            "$ref": "./examples/gitIntegration/CommitToGit_Selective.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/git/myGitCredentials": {
      "get": {
        "summary": "Returns the user's Git credentials configuration details.",
        "description": "Indicates how the user's credentials are obtained for accessing the relevant Git provider, automatically or through configured connection. If the user's credentials aren't configured, go to [Update My Git Credentials](/rest/api/fabric/core/git/update-my-git-credentials) API.\n\n## Permissions\n\nThe caller must have a *contributor* or higher workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Git"
        ],
        "operationId": "Git_GetMyGitCredentials",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/gitIntegration.json#/definitions/GitCredentialsConfigurationResponse"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.\n\n* InsufficientPrivileges - The caller does not have sufficient workspace permissions.\n\n* WorkspaceNotConnectedToGit - Workspace is not connected to git.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the user's Git credentials configuration for Azure DevOps when it is automatic example": {
            "$ref": "./examples/gitIntegration/GetMyGitCredentials_Automatic.json"
          },
          "Get the user's Git credentials configuration when it is configured by connection example": {
            "$ref": "./examples/gitIntegration/GetMyGitCredentials_ConfiguredConnection.json"
          },
          "Get the user's Git credentials configuration when it is not configured example": {
            "$ref": "./examples/gitIntegration/GetMyGitCredentials_None.json"
          }
        }
      },
      "patch": {
        "summary": "Updates the user's Git credentials configuration details.",
        "description": "Each user in the workspace has their own configured Git credentials. You can use [Get My Git Credentials](/rest/api/fabric/core/git/get-my-git-credentials) API to get the Git credentials configuration.\n\nTo get the connection ID, see [Automate Git integration](/fabric/cicd/git-integration/git-automation#get-or-create-git-provider-credentials-connection).\n\n## Permissions\n\nThe caller must have a *contributor* or higher workspace role.\n\nFor configured connection Git credentials, the caller must have permission for the connection.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Not supported when the Git provider is AzureDevOps and credentials are Automatic |\n\n## Interface",
        "tags": [
          "Git"
        ],
        "operationId": "Git_UpdateMyGitCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateGitCredentialsRequest",
            "description": "Updates the user's Git credentials request payload.",
            "schema": {
              "$ref": "./definitions/gitIntegration.json#/definitions/UpdateGitCredentialsRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/gitIntegration.json#/definitions/GitCredentialsConfigurationResponse"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.\n\n* InsufficientPrivileges - Caller has insufficient workspace permissions.\n\n* WorkspaceNotConnectedToGit - Workspace is not connected to git.\n\n* ConnectionNotFound - The specified connection was not found.\n\n* ConnectionMismatch - The connection does not match the Git provider details.\n\n* PrincipalTypeNotSupported - Caller identity type is not supported.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update user's Git credentials to ConfiguredConnection example": {
            "$ref": "./examples/gitIntegration/UpdateMyGitCredentials_ToConfiguredConnection.json"
          },
          "Update user's Git credentials to Automatic example": {
            "$ref": "./examples/gitIntegration/UpdateMyGitCredentials_ToAutomatic.json"
          },
          "Update user's Git credentials to None example": {
            "$ref": "./examples/gitIntegration/UpdateMyGitCredentials_ToNone.json"
          }
        }
      }
    },
    "/capacities": {
      "get": {
        "summary": "Returns a list of capacities the principal can access (either administrator or a contributor).",
        "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Required Delegated Scopes\n\nCapacity.Read.All or Capacity.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Capacities"
        ],
        "operationId": "Capacities_ListCapacities",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/Capacities"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List capacities example": {
            "$ref": "./examples/platform/ListCapacities.json"
          },
          "List capacities with continuation example": {
            "$ref": "./examples/platform/ListCapacitiesWithContinuation.json"
          }
        }
      }
    },
    "/operations/{operationId}": {
      "get": {
        "tags": [
          "LongRunningOperations"
        ],
        "summary": "Returns the current state of the long running operation.",
        "description": "You get the operationId from x-ms-operation-id header return by the API that initiated the operation. \n Once the operation status is 'Succeeded' use the [Get Operation Result API](/rest/api/fabric/core/long-running-operations/get-operation-result) to retrieve the result.\n\n## Permissions \n\nSame as the permissions required for the API that initiated the operation. \n\n## Required Delegated Scope \n\nSame as the scopes required for the API that initiated the operation.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "operationId": "LongRunningOperations_GetOperationState",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "description": "The operation ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "headers": {
              "Location": {
                "description": "The URL for polling the operation status or retrieving the result in case the operation status is Succeeded.",
                "type": "string"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              },
              "x-ms-operation-id": {
                "description": "The Operation ID.",
                "type": "string",
                "format": "uuid"
              }
            },
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/OperationState"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get active long running operation example": {
            "$ref": "./examples/platform/GetLongRunningOperationStateRunning.json"
          },
          "Get completed long running operation example": {
            "$ref": "./examples/platform/GetLongRunningOperationStateCompleted.json"
          }
        }
      }
    },
    "/operations/{operationId}/result": {
      "get": {
        "tags": [
          "LongRunningOperations"
        ],
        "summary": "Returns the result of the long running operation.",
        "description": "You get the operationId from x-ms-operation-id header return by the API that initiated the operation.\n\n## Permissions \n\nSame as the permissions required for the API that initiated the operation. \n\n## Required Delegated Scope \n\nSame as the scopes required for the API that initiated the operation.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "operationId": "LongRunningOperations_GetOperationResult",
        "consumes": [],
        "produces": [
          "application/json",
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "description": "The operation ID",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "type": "file"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get long running operation result example": {
            "$ref": "./examples/platform/GetLongRunningOperationResult.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/shortcuts": {
      "get": {
        "summary": "Returns a list of shortcuts for the item, including all the subfolders exhaustively.",
        "description": "## Required Delegated Scopes\n\n OneLake.Read.All or OneLake.ReadWrite.All \n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "OneLakeShortcuts"
        ],
        "operationId": "OneLakeShortcuts_ListShortcuts",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "parentPath",
            "description": "The starting path from which to retrieve the shortcuts",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/Shortcuts"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - Server cannot find the requested item.\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List shortcuts example": {
            "$ref": "./examples/platform/ListShortcuts.json"
          },
          "List shortcuts with continuation example": {
            "$ref": "./examples/platform/ListShortcutsWithContinuation.json"
          }
        }
      },
      "post": {
        "summary": "Creates a new shortcut or updates an existing shortcut.",
        "description": "## Required Delegated Scopes\n\nOneLake.ReadWrite.All \n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "OneLakeShortcuts"
        ],
        "operationId": "OneLakeShortcuts_CreateShortcut",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The ID of the workspace.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The ID of the data item.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "shortcutConflictPolicy",
            "description": "When provided, it defines the action to take when a shortcut with the same name and path already exists. The default action is 'Abort'. Additional ShortcutConflictPolicy types may be added over time.",
            "type": "string",
            "enum": [
              "Abort",
              "GenerateUniqueName",
              "CreateOrOverwrite",
              "OverwriteOnly"
            ],
            "x-ms-enum": {
              "name": "ShortcutConflictPolicy",
              "modelAsString": true,
              "values": [
                {
                  "value": "Abort",
                  "description": "When a shortcut with the same name and path already exists the shortcut creation will be cancelled."
                },
                {
                  "value": "GenerateUniqueName",
                  "description": "When a shortcut with the same name and path already exists the shortcut creation will continue with a new unique shortcut name."
                },
                {
                  "value": "CreateOrOverwrite",
                  "description": "When a shortcut with the same name and path already exists the shortcut creation will overwrite the existing shortcut. Create shortcut if it does not exist."
                },
                {
                  "value": "OverwriteOnly",
                  "description": "When a shortcut with the same name and path already exists the shortcut creation will overwrite the existing shortcut."
                }
              ]
            },
            "required": false
          },
          {
            "in": "body",
            "name": "createShortcutRequest",
            "description": "A shortcut create request includes a shortcut object representing a reference pointing to internal or external storage locations within OneLake. The shortcut is defined by its name, the path where it's created, and the target indicating the destination storage location.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/CreateShortcutRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created.",
            "headers": {
              "Location": {
                "description": "The URL of the newly created shortcut.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/Shortcut"
            }
          },
          "200": {
            "description": "Successfully updated.",
            "headers": {
              "Location": {
                "description": "The URL of the updated shortcut.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/Shortcut"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - Server cannot find the requested item.\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create shortcut One Lake target example": {
            "$ref": "./examples/platform/CreateShortcutOneLakeTarget.json"
          },
          "Create shortcut AdlsGen2 target example": {
            "$ref": "./examples/platform/CreateShortcutAdlsGen2Target.json"
          },
          "Create shortcut AmazonS3 target example": {
            "$ref": "./examples/platform/CreateShortcutAmazonS3Target.json"
          },
          "Create shortcut Google Cloud Storage target example": {
            "$ref": "./examples/platform/CreateShortcutGoogleCloudStorageTarget.json"
          },
          "Create shortcut S3 Compatible target example": {
            "$ref": "./examples/platform/CreateShortcutS3CompatibleTarget.json"
          },
          "Create shortcut Azure Blob Storage target example": {
            "$ref": "./examples/platform/CreateShortcutAzureBlobStorageTarget.json"
          },
          "Create or update shortcut target to OneLake": {
            "$ref": "./examples/platform/CreateOrOverwriteShortcutOneLakeTarget.json"
          },
          "Update shortcut target to OneLake": {
            "$ref": "./examples/platform/OverwriteShortcutOneLakeTarget.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/shortcuts/{shortcutPath}/{shortcutName}": {
      "get": {
        "summary": "Returns shortcut properties.",
        "description": "## Required Delegated Scopes\n\n OneLake.Read.All or OneLake.ReadWrite.All \n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "OneLakeShortcuts"
        ],
        "operationId": "OneLakeShortcuts_GetShortcut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The ID of the workspace.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The ID of the data item.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "shortcutPath",
            "description": "The creation path of the shortcut. For more information see: [Directory and file names](/rest/api/storageservices/Naming-and-Referencing-Shares--Directories--Files--and-Metadata#directory-and-file-names).",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "shortcutName",
            "description": "The name of the shortcut. For more information see: [Directory and file names](/rest/api/storageservices/Naming-and-Referencing-Shares--Directories--Files--and-Metadata#directory-and-file-names).",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/Shortcut"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - Server cannot find the requested item.\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get shortcut One Lake target example": {
            "$ref": "./examples/platform/GetShortcutOneLakeTarget.json"
          },
          "Get shortcut Google Cloud Storage target example": {
            "$ref": "./examples/platform/GetShortcutGoogleCloudStorageTarget.json"
          },
          "Get shortcut S3 Compatible target example": {
            "$ref": "./examples/platform/GetShortcutS3CompatibleTarget.json"
          },
          "Get shortcut ExternalDataShare target example": {
            "$ref": "./examples/platform/GetShortcutExternalDataShareTarget.json"
          },
          "Get shortcut AzureBlobStorage target example": {
            "$ref": "./examples/platform/GetShortcutAzureBlobStorageTarget.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes the shortcut but does not delete the destination storage folder.",
        "description": "## Required Delegated Scopes\n\n OneLake.ReadWrite.All \n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "OneLakeShortcuts"
        ],
        "operationId": "OneLakeShortcuts_DeleteShortcut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The ID of the workspace.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The ID of the data item.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "shortcutPath",
            "description": "The path of the shortcut to be deleted. For more information see: [Directory and file names](/rest/api/storageservices/Naming-and-Referencing-Shares--Directories--Files--and-Metadata#directory-and-file-names).",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "shortcutName",
            "description": "The name of the shortcut to delete. For more information see: [Directory and file names](/rest/api/storageservices/Naming-and-Referencing-Shares--Directories--Files--and-Metadata#directory-and-file-names).",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - Server cannot find the requested item.\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete shortcut One Lake target example": {
            "$ref": "./examples/platform/DeleteShortcutOneLakeTarget.json"
          }
        }
      }
    },
    "/tags":{
        "get": {
            "summary": "> [!NOTE]\n> This API is in preview.\n\nReturns a list of all the tenant's tags.",
            "description": "## Required Delegated Scopes\n\nTag.Read.All\n\n## Limitations\n\nMaximum 25 requests per one minute per principal. \n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
            "tags": [
                "Tags"
            ],
            "operationId": "Tags_ListTags",
            "x-ms-pageable": {
              "nextLinkName": "continuationUri"
            },
            "produces": [
                "application/json"
            ],
            "parameters": [
              {
                "in": "query",
                "name": "continuationToken",
                "description": "A token for retrieving the next page of results.",
                "type": "string",
                "required": false
              }
            ],
            "responses": {
                "200": {
                    "description": "The request was successful.",
                    "schema": {
                        "$ref": "../common/definitions.json#/definitions/Tags"
                    }
                },
                "default": {
                    "description": "Common error codes:\n\n* UnknownError - An error occurred",
                    "schema": {
                        "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                    }
                }
            },
            "x-ms-examples": {
                "List of all tenant's tags example": {
                    "$ref": "./examples/tags/ListTags.json"
                },
                "List of all tenant's tags with continuation example": {
                    "$ref": "./examples/tags/ListTagsWithContinuation.json"
                }
            }
        }
    },
    "/workspaces/{workspaceId}/onelake/resetShortcutCache": {
      "post": {
        "summary": "Deletes any cached files that were stored while reading from shortcuts.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation). \n\n## Required Delegated Scopes\n\nOneLake.ReadWrite.All \n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "OneLakeShortcuts"
        ],
        "operationId": "OneLakeShortcuts_ResetShortcutCache",
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The ID of the workspace.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "202": {
            "description": "Request accepted. Cache reset is in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - Server cannot find the requested item.\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Reset shortcut cache example": {
            "$ref": "./examples/platform/ResetShortcutCache.json"
          }
        }
      }
    },
    "/deploymentPipelines": {
      "get": {
        "summary": "Returns a list of deployment pipelines the user can access.",
        "description": "## Required Delegated Scopes\n\nPipeline.Read.All or Pipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "DeploymentPipelines"
        ],
        "operationId": "DeploymentPipelines_ListDeploymentPipelines",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelines"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List deployment pipelines example": {
            "$ref": "./examples/deploymentPipelines/ListDeploymentPipelines.json"
          },
          "List deployment pipelines with continuation example": {
            "$ref": "./examples/deploymentPipelines/ListDeploymentPipelinesWithContinuation.json"
          }
        }
      },
      "post": {
          "summary": "Creates a new deployment pipeline.",
          "description": "\n## Permissions\n\n Service Principals must have permission granted by Fabric administrator. For more information see: [Service principals can create workspaces, connections, and deployment pipelines](/fabric/admin/service-admin-portal-developer#service-principals-can-create-workspaces-connections-and-deployment-pipelines). \n## Required Delegated Scopes\n\nPipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
          "tags": ["DeploymentPipelines"],
          "operationId": "DeploymentPipelines_CreateDeploymentPipeline",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
              {
                  "name": "createDeploymentPipelineRequest",
                  "in": "body",
                  "description": "The create pipeline request.",
                  "required": true,
                  "schema": {
                      "$ref": "./definitions/deploymentPipelines.json#/definitions/CreateDeploymentPipelineRequest"
                  }
              }
          ],
          "responses": {
              "201": {
                  "description": "Successfuly created.",
                  "schema": {
                      "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineExtendedInfo"
                  }
              },
              "default":{
                  "description": "Common error codes:\n\n* UnknownError - An error occurred",
                  "schema": {
                      "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                  }
              }
          },
          "x-ms-examples": {
              "Create a deployment pipeline example": {
                  "$ref": "./examples/deploymentPipelines/CreateDeploymentPipeline.json"
              }
          }
      }
    },
    "/deploymentPipelines/{deploymentPipelineId}": {
      "get": {
        "summary": "Returns the specified deployment pipeline metadata.",
        "description": "## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\n\n## Required Delegated Scopes\n\nPipeline.Read.All or Pipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "DeploymentPipelines"
        ],
        "operationId": "DeploymentPipelines_GetDeploymentPipeline",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deploymentPipelineId",
            "in": "path",
            "description": "The deployment pipeline ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineExtendedInfo"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a deployment pipeline example": {
            "$ref": "./examples/deploymentPipelines/GetDeploymentPipeline.json"
          }
        }
      },
      "patch": {
          "summary": "Updates the properties of the specified deployment pipeline.",
          "description": "## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\n\n## Required Delegated Scopes\n\nPipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
          "tags": ["DeploymentPipelines"],
          "operationId": "DeploymentPipelines_UpdateDeploymentPipeline",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
              {
                  "name": "deploymentPipelineId",
                  "in": "path",
                  "description": "The deployment pipeline ID.",
                  "required": true,
                  "type": "string",
                  "format": "uuid"
              },
              {
                  "name": "updatePipelineRequest",
                  "in": "body",
                  "description": "The update pipeline request.",
                  "required": true,
                  "schema": {
                      "$ref": "./definitions/deploymentPipelines.json#/definitions/UpdateDeploymentPipelineRequest"
                  }
              }
          ],
          "responses": {
              "200": {
                  "description": "Request completed successfully.",
                  "schema": {
                      "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineExtendedInfo"
                  }
              },
              "default":{
                  "description": "Common error codes:\n\n* UnknownError - An error occurred",
                  "schema": {
                      "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                  }
              }
          },
          "x-ms-examples": {
              "Update a deployment pipeline example": {
                  "$ref": "./examples/deploymentPipelines/UpdateDeploymentPipeline.json"
              }
          }
      },
      "delete": {
          "summary": "Deletes the specified deployment pipeline.",
          "description": "## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\n\nThis operation will fail if there's an active deployment operation.\n\n## Required Delegated Scopes\n\nPipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
          "tags": ["DeploymentPipelines"],
          "operationId": "DeploymentPipelines_DeleteDeploymentPipeline",
          "consumes": [],
          "produces": ["application/json"],
          "parameters": [
              {
                  "name": "deploymentPipelineId",
                  "in": "path",
                  "description": "The deployment pipeline ID.",
                  "required": true,
                  "type": "string",
                  "format": "uuid"
              }
          ],
          "responses": {
              "200": {
                  "description": "Request completed successfully."
              },
              "default":{
                  "description": "Common error codes:\n\n* UnknownError - An error occurred",
                  "schema": {
                      "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                  }
              }
          },
          "x-ms-examples": {
              "Delete a deployment pipeline example": {
                  "$ref": "./examples/deploymentPipelines/DeleteDeploymentPipeline.json"
              }
          }
      }
    },
    "/deploymentPipelines/{deploymentPipelineId}/roleAssignments": {
      "get": {
          "tags": ["DeploymentPipelines"],
          "summary": "Returns a list of deployment pipeline role assignments.",
          "description": "## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\n\n## Required Delegated Scopes\n\nPipeline.Read.All or Pipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
          "operationId": "DeploymentPipelines_ListDeploymentPipelineRoleAssignments",
          "x-ms-pageable": {
            "nextLinkName": "continuationUri"
          },
          "consumes": [],
          "produces": ["application/json"],
          "parameters": [
              {
                  "name": "deploymentPipelineId",
                  "in": "path",
                  "required": true,
                  "description": "The deployment pipeline ID.",
                  "type": "string",
                  "format": "uuid"
              },
              {
                "in": "query",
                "name": "continuationToken",
                "description": "A token for retrieving the next page of results.",
                "type": "string",
                "required": false
              }
          ],
          "responses": {
              "200": {
                  "description": "Request completed successfully.",
                  "schema": {
                      "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineRoleAssignments"
                  }
              },
              "default":{
                  "description": "Common error codes:\n\n* UnknownError - An error occurred",
                  "schema": {
                      "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                  }
              }
          },
          "x-ms-examples": {
              "List role assignments of a deployment pipeline example": {
                  "$ref": "./examples/deploymentPipelines/ListDeploymentPipelineRoleAssignments.json"
              },
              "List role assignments of a deployment pipeline with continuation example": {
                "$ref": "./examples/deploymentPipelines/ListDeploymentPipelineRoleAssignmentsWithContinuation.json"
              }
          }
      },
      "post": {
          "tags": ["DeploymentPipelines"],
          "summary": "Adds a deployment pipeline role assignment.",
          "description": "## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\n\n## Required Delegated Scopes\n\nPipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
          "operationId": "DeploymentPipelines_AddDeploymentPipelineRoleAssignment",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
              {
                  "name": "deploymentPipelineId",
                  "in": "path",
                  "required": true,
                  "description": "The deployment pipeline ID.",
                  "type": "string",
                  "format": "uuid"
              },
              {
                  "in": "body",
                  "name": "deploymentPipelineRoleAssignmentRequest",
                  "description": "Add deployment pipeline role assignment request payload.",
                  "schema": {
                      "$ref": "./definitions/deploymentPipelines.json#/definitions/AddDeploymentPipelineRoleAssignmentRequest"
                  },
                  "required": true
              }
          ],
          "responses": {
              "200": {
                  "description": "Request completed successfully."
              },
              "default":{
                  "description": "Common error codes:\n\n* UnknownError - An error occurred",
                  "schema": {
                      "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                  }
              }
          },
          "x-ms-examples": {
              "Add a user role assignment to a deployment pipeline example": {
                  "$ref": "./examples/deploymentPipelines/AddDeploymentPipelineUserRoleAssignment.json"
              },
              "Add a group role assignment to a deployment pipeline example": {
                  "$ref": "./examples/deploymentPipelines/AddDeploymentPipelineGroupRoleAssignment.json"
              },
              "Add a service principal role assignment to a deployment pipeline example": {
                  "$ref": "./examples/deploymentPipelines/AddDeploymentPipelineServicePrincipalRoleAssignment.json"
              }
          }
      }
    },
    "/deploymentPipelines/{deploymentPipelineId}/roleAssignments/{principalId}": {
      "delete": {
          "summary": "Deletes the specified deployment pipeline role assignment for the specified principal.",
          "description": "## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\n\n## Required Delegated Scopes\n\nPipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
          "tags": ["DeploymentPipelines"],
          "operationId": "DeploymentPipelines_DeleteDeploymentPipelineRoleAssignment",
          "consumes": [],
          "produces": ["application/json"],
          "parameters": [
              {
                  "name": "deploymentPipelineId",
                  "in": "path",
                  "required": true,
                  "description": "The deployment pipeline ID.",
                  "type": "string",
                  "format": "uuid"
              },
              {
                  "in": "path",
                  "name": "principalId",
                  "description": "The principal ID.",
                  "type": "string",
                  "format": "uuid",
                  "required": true
              }
          ],
          "responses": {
              "200": {
                  "description": "Request completed successfully."
              },
              "default":{
                  "description": "Common error codes:\n\n* UnknownError - An error occurred",
                  "schema": {
                      "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                  }
              }
          },
          "x-ms-examples": {
              "Remove group role assignment from a deployment pipeline example": {
                  "$ref": "./examples/deploymentPipelines/DeleteDeploymentPipelineUserGroupRoleAssignment.json"
              },
              "Remove service principal role assignment from a deployment pipeline example": {
                  "$ref": "./examples/deploymentPipelines/DeleteDeploymentPipelineUserPrincipalRoleAssignment.json"
              }
          }
      }
    },
    "/deploymentPipelines/{deploymentPipelineId}/operations": {
      "get": {
          "summary": "Returns a list of the up-to-20 most recent deploy operations performed on the specified deployment pipeline.",
          "description": "## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\n\n## Required Delegated Scopes\n\nPipeline.Read.All or Pipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
          "tags": ["DeploymentPipelines"],
          "operationId": "DeploymentPipelines_ListDeploymentPipelineOperations",
          "x-ms-pageable": {
            "nextLinkName": "continuationUri"
          },
          "consumes": [],
          "produces": ["application/json"],
          "parameters": [
              {
                  "name": "deploymentPipelineId",
                  "in": "path",
                  "description": "The deployment pipeline ID.",
                  "required": true,
                  "type": "string",
                  "format": "uuid"
              },
              {
                "in": "query",
                "name": "continuationToken",
                "description": "A token for retrieving the next page of results.",
                "type": "string",
                "required": false
              }
          ],
          "responses": {
              "200": {
                  "description": "Request completed successfully.",
                  "schema": {
                      "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineOperations"
                  }
              },
              "default":{
                  "description": "Common error codes:\n\n* UnknownError - An error occurred",
                  "schema": {
                      "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                  }
              }
          },
          "x-ms-examples": {
              "List deployment pipeline operations example": {
                  "$ref": "./examples/deploymentPipelines/ListDeploymentPipelineOperations.json"
              },
              "List deployment pipeline operations with continuation example": {
                "$ref": "./examples/deploymentPipelines/ListDeploymentPipelineOperationsWithContinuation.json"
              }
          }
      }
    },
    "/deploymentPipelines/{deploymentPipelineId}/operations/{operationId}": {
      "get": {
          "summary": "Returns the details of the specified deploy operation performed on the specified deployment pipeline, including the deployment execution plan.",
          "description": "## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\n\n## Required Delegated Scopes\n\nPipeline.Read.All or Pipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
          "tags": ["DeploymentPipelines"],
          "operationId": "DeploymentPipelines_GetDeploymentPipelineOperation",
          "consumes": [],
          "produces": ["application/json"],
          "parameters": [
              {
                  "name": "deploymentPipelineId",
                  "in": "path",
                  "description": "The deployment pipeline ID.",
                  "required": true,
                  "type": "string",
                  "format": "uuid"
              },
              {
                  "name": "operationId",
                  "in": "path",
                  "description": "The operation ID.",
                  "required": true,
                  "type": "string",
                  "format": "uuid"
              }
          ],
          "responses": {
              "200": {
                  "description": "Request completed successfully.",
                  "schema": {
                      "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineOperationExtendedInfo"
                  }
              },
              "default":{
                  "description": "Common error codes:\n\n* UnknownError - An error occurred",
                  "schema": {
                      "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                  }
              }
          },
          "x-ms-examples": {
              "Get a deployment pipeline operation example": {
                  "$ref": "./examples/deploymentPipelines/GetDeploymentPipelineOperation.json"
              }
          }
      }
    },
    "/deploymentPipelines/{deploymentPipelineId}/stages": {
      "get": {
        "summary": "Returns the specified deployment pipeline stages.",
        "description": "## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\n\n## Required Delegated Scopes\n\nPipeline.Read.All or Pipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "DeploymentPipelines"
        ],
        "operationId": "DeploymentPipelines_ListDeploymentPipelineStages",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deploymentPipelineId",
            "in": "path",
            "description": "The deployment pipeline ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineStages"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List the deployment pipeline stages example": {
            "$ref": "./examples/deploymentPipelines/ListDeploymentPipelineStages.json"
          },
          "List the deployment pipeline stages with a continuation token example": {
            "$ref": "./examples/deploymentPipelines/ListDeploymentPipelineStagesWithContinuation.json"
          }
        }
      }
    },
    "/deploymentPipelines/{deploymentPipelineId}/stages/{stageId}": {
      "get": {
        "summary": "Returns the specified deployment pipeline stage metadata.",
        "description": "## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\n\n## Required Delegated Scopes\n\nPipeline.Read.All or Pipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "DeploymentPipelines"
        ],
        "operationId": "DeploymentPipelines_GetDeploymentPipelineStage",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deploymentPipelineId",
            "in": "path",
            "description": "The deployment pipeline ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "stageId",
            "in": "path",
            "description": "The deployment pipeline stage ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineStage"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a deployment pipeline stage example": {
            "$ref": "./examples/deploymentPipelines/GetDeploymentPipelineStage.json"
          }
        }
      },
      "patch": {
          "summary": "Updates the properties of the specified deployment pipeline stage.",
          "description": "## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\n\n## Required Delegated Scopes\n\nPipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
          "tags": ["DeploymentPipelines"],
          "operationId": "DeploymentPipelines_UpdateDeploymentPipelineStage",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
              {
                  "name": "deploymentPipelineId",
                  "in": "path",
                  "description": "The deployment pipeline ID.",
                  "required": true,
                  "type": "string",
                  "format": "uuid"
              },
              {
                "name": "stageId",
                "in": "path",
                "description": "The deployment pipeline stage ID.",
                "required": true,
                "type": "string",
                "format": "uuid"
              },
              {
                  "name": "updatePipelineStageRequest",
                  "in": "body",
                  "description": "The update pipeline stage request.",
                  "required": true,
                  "schema": {
                      "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineStageRequest"
                  }
              }
          ],
          "responses": {
              "200": {
                  "description": "Request completed successfully.",
                  "schema": {
                      "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineStage"
                  }
              },
              "default":{
                  "description": "Common error codes:\n\n* UnknownError - An error occurred",
                  "schema": {
                      "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                  }
              }
          },
          "x-ms-examples": {
              "Update a deployment pipeline stage example": {
                  "$ref": "./examples/deploymentPipelines/UpdateDeploymentPipelineStage.json"
              }
          }
      }
    },
    "/deploymentPipelines/{deploymentPipelineId}/stages/{stageId}/items": {
      "get": {
        "summary": "Returns the supported items from the workspace assigned to the specified stage of the specified deployment pipeline.",
        "description": "To learn about items that are supported in deployment pipelines, see: [Supported items](/fabric/cicd/deployment-pipelines/intro-to-deployment-pipelines#supported-items).\n\n## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\nThe user must be at least a workspace contributor assigned to the specified stage. For more information, see: [Permissions](https://go.microsoft.com/fwlink/?linkid=2235654).\n\n## Required Delegated Scopes\n\nPipeline.Read.All or Pipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "DeploymentPipelines"
        ],
        "operationId": "DeploymentPipelines_ListDeploymentPipelineStageItems",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deploymentPipelineId",
            "in": "path",
            "description": "The deployment pipeline ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "stageId",
            "in": "path",
            "description": "The deployment pipeline stage ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineStageItems"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example of listing a deployment pipeline stage Fabric items": {
            "$ref": "./examples/deploymentPipelines/ListDeploymentPipelineStageItems.json"
          },
          "Example of listing a deployment pipeline stage Fabric items with a continuation token": {
            "$ref": "./examples/deploymentPipelines/ListDeploymentPipelineStageItemsWithContinuation.json"
          }
        }
      }
    },
    "/deploymentPipelines/{deploymentPipelineId}/deploy": {
      "post": {
        "summary": "Deploys items from the specified stage of the specified deployment pipeline.",
        "description": "To learn about items that are supported in deployment pipelines, see: [Supported items](/fabric/cicd/deployment-pipelines/intro-to-deployment-pipelines#supported-items).\n\nThis API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\n## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\nThe user must be at least a contributor on both source and target deployment workspaces. For more information, see: [Permissions](https://go.microsoft.com/fwlink/?linkid=2235654).\n\n## Required Delegated Scopes\n\nPipeline.Deploy\n\n## Limitations\n\nMaximum 300 deployed items per request.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Only supported when all the [items](/rest/api/fabric/articles/item-management/item-management-overview) involved in the operation support service principals |\n\n## Interface",
        "tags": [
          "DeploymentPipelines"
        ],
        "operationId": "DeploymentPipelines_DeployStageContent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "name": "deploymentPipelineId",
            "in": "path",
            "description": "The deployment pipeline ID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "deployRequest",
            "in": "body",
            "description": "The deploy request.",
            "required": true,
            "schema": {
              "$ref": "./definitions/deploymentPipelines.json#/definitions/DeployRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineOperationExtendedInfo"
            }
          },
          "202": {
            "description": "Request accepted, deployment is in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status. Can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID. Can be used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "deployment-id": {
                "description": "The deployment ID. Can be used with deployment pipeline operations APIs to track deployment operations history.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.\n\n* PrincipalTypeNotSupported - Caller identity type is not supported.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example of deploying specific Fabric items (such as reports or dashboards) from a deployment pipeline stage": {
            "$ref": "./examples/deploymentPipelines/SelectiveDeploy.json"
          },
          "Example of deploying all Fabric items (such as reports or dashboards) from a deployment pipeline stage": {
            "$ref": "./examples/deploymentPipelines/DeployAll.json"
          }
        }
      }
    },
    "/deploymentPipelines/{deploymentPipelineId}/stages/{stageId}/assignWorkspace": {
      "post": {
          "summary": "Assigns the specified workspace to the specified deployment pipeline stage.",
          "description": "This operation will fail if there's an active deployment operation.\n\n## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\nThe caller must have an *admin* workspace role.\n\n## Required Delegated Scopes\n\nPipeline.ReadWrite.All and Workspace.ReadWrite.All\n\n## Limitations\n\n - The specified deployment pipeline stage must not be assigned to any other workspace.\n  - Only workspace admins can assign it to a deployment pipeline stage.\n - The specified workspace isn't assigned to any other deployment pipeline stage.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
          "tags": ["DeploymentPipelines"],
          "operationId": "DeploymentPipelines_AssignWorkspaceToStage",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
              {
                  "name": "deploymentPipelineId",
                  "in": "path",
                  "description": "The deployment pipeline ID.",
                  "required": true,
                  "type": "string",
                  "format": "uuid"
              },
              {
                  "name": "stageId",
                  "in": "path",
                  "description": "The deployment pipeline stage ID.",
                  "required": true,
                  "type": "string",
                  "format": "uuid"
              },
              {
                  "name": "deploymentPipelineAssignWorkspaceRequest",
                  "in": "body",
                  "description": "The assign workspace request.",
                  "required": true,
                  "schema": {
                      "$ref": "./definitions/deploymentPipelines.json#/definitions/DeploymentPipelineAssignWorkspaceRequest"
                  }
              }
          ],
          "responses": {
              "200": {
                  "description": "Request completed successfully."
              },
              "default":{
                  "description": "Common error codes:\n\n* UnknownError - An error occurred",
                  "schema": {
                      "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                  }
              }
          },
          "x-ms-examples": {
              "Assign a workspace to a deployment pipeline example": {
                  "$ref": "./examples/deploymentPipelines/AssignWorkspaceToStage.json"
              }
          }
      }
  },
  "/deploymentPipelines/{deploymentPipelineId}/stages/{stageId}/unassignWorkspace": {
      "post": {
          "summary": "Unassigns the workspace from the specified stage in the specified deployment pipeline.",
          "description": "This operation will fail if there's an active deployment operation.\n\n## Permissions\n\nThe caller must have an *admin* deployment pipelines role.\n\n## Required Delegated Scopes\n\nPipeline.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
          "tags": ["DeploymentPipelines"],
          "operationId": "DeploymentPipelines_UnassignWorkspaceFromStage",
          "consumes": [],
          "produces": ["application/json"],
          "parameters": [
              {
                  "name": "deploymentPipelineId",
                  "in": "path",
                  "description": "The deployment pipeline ID.",
                  "required": true,
                  "type": "string",
                  "format": "uuid"
              },
              {
                  "name": "stageId",
                  "in": "path",
                  "description": "The deployment pipeline stage ID.",
                  "required": true,
                  "type": "string",
                  "format": "uuid"
              }
          ],
          "responses": {
              "200": {
                  "description": "Request completed successfully."
              },
              "default":{
                  "description": "Common error codes:\n\n* UnknownError - An error occurred",
                  "schema": {
                      "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                  }
              }
          },
          "x-ms-examples": {
              "Unassign a workspace from a deployment pipeline example": {
                  "$ref": "./examples/deploymentPipelines/UnassignWorkspaceFromStage.json"
              }
          }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/dataAccessRoles": {
      "get": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nReturns a list of OneLake roles.",
        "description": "## Required Delegated Scopes\n\n OneLake.Read.All or OneLake.ReadWrite.All \n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "OneLakeDataAccessSecurity"
        ],
        "operationId": "OneLakeDataAccessSecurity_ListDataAccessRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The ID of the Fabric item to put the roles.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/DataAccessRoles"
            },
            "headers": {
              "Etag": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - Indicates that the server cannot find the requested item.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List data access roles multiple pages example": {
            "$ref": "./examples/platform/ListDataAccessRolesWithContinuationExample.json"
          },
          "List default data access roles example": {
            "$ref": "./examples/platform/ListDefaultDataAccessRolesExample.json"
          },
          "List data access roles single page example": {
            "$ref": "./examples/platform/ListDataAccessRolesSinglePageExample.json"
          }
        }
      },
      "put": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nCreates or updates data access roles in OneLake.",
        "description": "## Required Delegated Scopes\n\n OneLake.ReadWrite.All \n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "OneLakeDataAccessSecurity"
        ],
        "operationId": "OneLakeDataAccessSecurity_CreateOrUpdateDataAccessRoles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The ID of the Fabric item to put the roles.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "dryRun",
            "description": "Used to trigger a dry run of the API call. True - The API call will trigger a dry run and no roles will be changed. False - Will not trigger a dry run and roles will be updated.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "createOrUpdateDataAccessRolesRequest",
            "description": "Contains definition of roles used to manage data access security and ensure that only authorized users can view, edit, or delete certain data. Calling this API updates role definitions and creates, updates, or deletes roles to match the provided payload.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/CreateOrUpdateDataAccessRolesRequest"
            },
            "required": true
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "An ETag value. The ETag must be specified in quotes. If provided, the call will succeed only if the resource's ETag matches the provided ETag.",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "An ETag value. The ETag must be specified in quotes. If provided, the call will succeed only if the resource's ETag doesn't match the provided ETag.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "headers": {
              "Etag": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - Indicates that the server can't find the requested item.\n\n* PreconditionFailed -Indicates that the current resource ETag doesn't match the value specified in the If-Match header.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update data access roles example": {
            "$ref": "./examples/platform/CreateOrUpdateDataAccessRolesExample.json"
          },
          "Create or update data access roles with tables path example": {
            "$ref": "./examples/platform/CreateOrUpdateDataAccessRolesWithTablesPathExample.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/provisionIdentity": {
      "post": {
        "summary": "Provision a workspace identity for a workspace.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\n ## Permissions\n\n The caller must have an *admin* role in the workspace.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_ProvisionIdentity",
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The ID of the workspace.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully provisioned",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/WorkspaceIdentity"
            }
          },
          "202": {
            "description": "Request accepted, identity provisioning in progress",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID, which can be used with LRO APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Provision workspace identity example": {
            "$ref": "./examples/platform/ProvisionWorkspaceIdentity.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/deprovisionIdentity": {
      "post": {
        "summary": "Deprovision a workspace identity.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\n ## Permissions\n\n The caller must have an *admin* role in the workspace.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Workspaces"
        ],
        "operationId": "Workspaces_DeprovisionIdentity",
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The ID of the workspace.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deprovisioned"
          },
          "202": {
            "description": "Request accepted, identity deprovisioning in progress",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID, which can be used with LRO APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deprovision workspace identity example": {
            "$ref": "./examples/platform/DeprovisionWorkspaceIdentity.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/externalDataShares": {
      "post": {
        "summary": "Creates an external data share for a given path or list of paths in the specified item.",
        "description": "## Permissions\n\nThe caller must have *read* and *reshare* permissions on the item.\n\n## Required Delegated Scopes\n\nItem APIs can have one of these scopes in their token:\n- Generic scope: Item.ExternalDataShare.All\n- Specific scope: *itemType*.ExternalDataShare.All, for example: Lakehouse.ExternalDataShare.All\n\n For more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Required Tenant Settings\n\nTo use this API, enable the *External data sharing* admin switch for the calling principal.\n\n## Limitations\n\nMaximum 10 requests per minute.\n\nSupported item types: See [External data sharing in Microsoft Fabric - Supported item types](/fabric/governance/external-data-sharing-overview#supported-fabric-item-types).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "ExternalDataSharesProvider"
        ],
        "operationId": "ExternalDataSharesProvider_CreateExternalDataShare",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "createExternalDataShareRequest",
            "description": "The request payload for creating an external data share.",
            "required": true,
            "schema": {
              "$ref": "./definitions/externaldatasharing.json#/definitions/CreateExternalDataShareRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created.",
            "headers": {
              "Location": {
                "description": "The URL of the newly created external data share.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions/externaldatasharing.json#/definitions/ExternalDataShare"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create an external data share example": {
            "$ref": "./examples/externaldatasharing/CreateExternalDataShare.json"
          },
          "Create an external data share with a specific recipient tenant ID example": {
            "$ref": "./examples/externaldatasharing/CreateExternalDataShareWithRecipientTenantID.json"
          },
          "Create an external data share with multiple paths example": {
            "$ref": "./examples/externaldatasharing/CreateExternalDataShareWithMultiplePaths.json"
          }
        }
      },
      "get": {
        "summary": "Returns a list of the external data shares that exist for the specified item.",
        "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Permissions\n\nThe caller must have *read* and *reshare* permissions on the item.\n\n## Required Delegated Scopes\n\nItem APIs can have one of these scopes in their token:\n- Generic scope: Item.ExternalDataShare.All\n- Specific scope: *itemType*.ExternalDataShare.All, for example: Lakehouse.ExternalDataShare.All\n\n For more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Required Tenant Settings\n\nTo use this API, enable the *External data sharing* admin switch for the calling principal.\n\n## Limitations\n\nMaximum 10 requests per minute.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "ExternalDataSharesProvider"
        ],
        "operationId": "ExternalDataSharesProvider_ListExternalDataSharesInItem",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/externaldatasharing.json#/definitions/ExternalDataShares"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List external data shares of an item example": {
            "$ref": "./examples/externaldatasharing/ListExternalDataSharesInItem.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/externalDataShares/{externalDataShareId}": {
      "get": {
        "summary": "Returns the details of the specified external data share.",
        "description": "## Permissions\n\nThe caller must have *read* and *reshare* permissions on the item.\n\n## Required Delegated Scopes\n\nItem APIs can have one of these scopes in their token:\n- Generic scope: Item.ExternalDataShare.All\n- Specific scope: *itemType*.ExternalDataShare.All, for example: Lakehouse.ExternalDataShare.All\n\n For more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Required Tenant Settings\n\nTo use this API, enable the *External data sharing* admin switch for the calling principal.\n\n## Limitations\n\nMaximum 10 requests per minute.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "ExternalDataSharesProvider"
        ],
        "operationId": "ExternalDataSharesProvider_GetExternalDataShare",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "externalDataShareId",
            "description": "The external data share ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/externaldatasharing.json#/definitions/ExternalDataShare"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get external data share example": {
            "$ref": "./examples/externaldatasharing/GetExternalDataShare.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes the specified external data share.",
        "description": "## Permissions\n\nThe caller must have *read* and *reshare* permissions on the item.\n\n## Required Delegated Scopes\n\nItem APIs can have one of these scopes in their token:\n- Generic scope: Item.ExternalDataShare.All\n- Specific scope: *itemType*.ExternalDataShare.All, for example: Lakehouse.ExternalDataShare.All\n\n For more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Required Tenant Settings\n\nTo use this API, enable the *External data sharing* admin switch for the calling principal.\n\n## Limitations\n\nMaximum 10 requests per minute.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "ExternalDataSharesProvider"
        ],
        "operationId": "ExternalDataSharesProvider_DeleteExternalDataShare",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "externalDataShareId",
            "description": "The external data share ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete external data share example": {
            "$ref": "./examples/externaldatasharing/DeleteExternalDataShare.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/externalDataShares/{externalDataShareId}/revoke": {
      "post": {
        "summary": "Revokes the specified external data share. This action cannot be undone.",
        "description": "## Permissions\n\nThe caller must have *read* and *reshare* permissions on the item.\n\n## Required Delegated Scopes\n\nItem APIs can have one of these scopes in their token:\n- Generic scope: Item.ExternalDataShare.All\n- Specific scope: *itemType*.ExternalDataShare.All, for example: Lakehouse.ExternalDataShare.All\n\n For more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Required Tenant Settings\n\nTo use this API, enable the *External data sharing* admin switch for the calling principal.\n\n## Limitations\n\nMaximum 10 requests per minute.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "ExternalDataSharesProvider"
        ],
        "operationId": "ExternalDataSharesProvider_RevokeExternalDataShare",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "externalDataShareId",
            "description": "The external data share ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Revoke external data share example": {
            "$ref": "./examples/externaldatasharing/RevokeExternalDataShare.json"
          }
        }
      }
    },
    "/externalDataShares/invitations/{invitationId}": {
      "get": {
        "summary": "Returns information about an external data share invitation.",
        "description": "## Required Delegated Scopes\n\nExternalDataShare.Accept.All\n\n## Required Tenant Settings\n\nTo use this API, enable the *Users can accept external data shares* admin switch for the calling principal.\n\n## Limitations\n\nMaximum 10 requests per minute.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | No |\n\n## Interface",
        "tags": [
          "ExternalDataSharesRecipient"
        ],
        "operationId": "ExternalDataSharesRecipient_GetExternalDataShareInvitationDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "invitationId",
            "description": "The external data share invitation ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "providerTenantId",
            "description": "The external data share provider tenant ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/externaldatasharing.json#/definitions/ExternalDataShareInvitationDetails"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ExternalDataShareCannotBeAcceptedInTheSameTenant - An External Data Share cannot be accepted in the same tenant",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get external data share invitation details example": {
            "$ref": "./examples/externaldatasharing/GetExternalDataShareInvitationDetails.json"
          }
        }
      }
    },
    "/externalDataShares/invitations/{invitationId}/accept": {
      "post": {
        "summary": "Accepts an external data share invitation into a specified data item.",
        "description": "## Permissions\n\nThe caller must have *write* permissions on the item.\n\n## Required Delegated Scopes\n\nExternalDataShare.Accept.All and for the specified item, one of the 2 types of scopes:\n- Generic scope: Item.ReadWrite.All\n- Specific scope: *itemType*.ReadWrite.All (for example: Lakehouse.ReadWrite.All)\n\n For more information about scopes, see [scopes article](/rest/api/fabric/articles/scopes).\n\n## Required Tenant Settings\n\nTo use this API, enable the *Users can accept external data shares* admin switch for the calling principal.\n\n## Limitations\n\nMaximum 10 requests per minute.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | No |\n\n## Interface",
        "tags": [
          "ExternalDataSharesRecipient"
        ],
        "operationId": "ExternalDataSharesRecipient_AcceptExternalDataShareInvitation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "invitationId",
            "description": "The external data share invitation ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "acceptExternalDataShareRequest",
            "description": "The request payload for accepting an external data share invitation.",
            "required": true,
            "schema": {
              "$ref": "./definitions/externaldatasharing.json#/definitions/AcceptExternalDataShareInvitationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/externaldatasharing.json#/definitions/AcceptExternalDataShareInvitationResponse"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ExternalDataShareCannotBeAcceptedInTheSameTenant - An External Data Share cannot be accepted in the same tenant\n\n* ExternalDataShareOperationNotSupportedForItemType - Item type is not supported for this operation",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Accept external data share invitation example": {
            "$ref": "./examples/externaldatasharing/AcceptExternalDataShareInvitation.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/connections": {
      "get": {
        "summary": "Returns the list of connections that the specified item is connected to.",
        "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Permissions\n\n The caller must have *read and write* permissions for the item. \n\n## Required Delegated Scopes\n\n For item APIs use these scope types: \n- Generic scope: Item.ReadWrite.All \n- Specific scope: *itemType*.ReadWrite.All (for example: Notebook.ReadWrite.All) \n\n for more information about scopes, see [Scopes article](/rest/api/fabric/articles/scopes).\n\n## Limitations\n\n This API is blocked for an item with a protected sensitivity label, unless the caller has the usage rights to delete the sensitivity label.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_ListItemConnections",
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/ItemConnections"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - Indicates that the server cannot find the requested item.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List item connections example": {
            "$ref": "./examples/platform/ListItemConnections.json"
          },
          "List item connections with continuation example": {
            "$ref": "./examples/platform/ListItemConnectionsVirtualConnection.json"
          },
          "List item connections - Semantic Model Direct Lake example": {
            "$ref": "./examples/platform/ListItemConnectionsVirtualConnection.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/applyTags": {
      "post": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nApply tags on an item.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher role on the workspace. \n\n## Required Delegated Scopes\n\n ItemMetadata.ReadWrite.All or these scope types: \n- Generic scope: Item.ReadWrite.All \n- Specific scope: *itemType*.ReadWrite.All (for example: Notebook.ReadWrite.All) \n\n For more information about scopes, see [Scopes article](/rest/api/fabric/articles/scopes).\n\n## Limitations\n\nMaximum 25 requests per hour per principal.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_ApplyTags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "applyTagsRequest",
            "description": "The request payload for applying tags.",
            "schema": {
              "$ref": "./definitions/tags.json#/definitions/ApplyTagsRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Tags were applied successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - Indicates that the server cannot find the requested item \n\n* EntityNotFound - Tag ID does not exist \n\n* InvalidInputs - Invalid input was provided",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apply tags example": {
            "$ref": "./examples/platform/ApplyTags.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/items/{itemId}/unapplyTags": {
      "post": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nUnapply tags from an item.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher role on the workspace. \n\n## Required Delegated Scopes\n\n ItemMetadata.ReadWrite.All or these scope types: \n- Generic scope: Item.ReadWrite.All \n- Specific scope: *itemType*.ReadWrite.All (for example: Notebook.ReadWrite.All) \n\n For more information about scopes, see [Scopes article](/rest/api/fabric/articles/scopes).\n\n## Limitations\n\nMaximum 25 requests per hour per principal.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Tags"
        ],
        "operationId": "Tags_UnapplyTags",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "itemId",
            "description": "The item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "unapplyTagsRequest",
            "description": "The request payload for unapplying tags.",
            "schema": {
              "$ref": "./definitions/tags.json#/definitions/UnapplyTagsRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Tags were unapplied successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - Indicates that the server cannot find the requested item \n\n* EntityNotFound - Tag ID does not exist \n\n* InvalidInputs - Invalid input was provided",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Unapply tags example": {
            "$ref": "./examples/platform/UnapplyTags.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/folders": {
      "get": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nReturns a list of folders from the specified workspace.",
        "description": "\nThis API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Permissions\n\n The caller must have *viewer* or higher workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Folders"
        ],
        "operationId": "Folders_ListFolders",
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "rootFolderId",
            "description": "This parameter allows users to filter folders based on a specific root folder. If not provided, the workspace is used as the root folder.",
            "type": "string",
            "format": "uuid",
            "required": false
          },
          {
            "in": "query",
            "name": "recursive",
            "description": "Lists folders in a folder and its nested folders, or just a folder only. True - All folders in the folder and its nested folders are listed, False - Only folders in the folder are listed. The default value is true.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/Folders"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* FolderNotFound - Could not find the requested folder.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all folders in workspace example": {
            "$ref": "./examples/platform/ListAllFoldersInWorkspace.json"
          },
          "List folders under parent folder recursively example": {
            "$ref": "./examples/platform/ListFoldersUnderParentFolderRecursively.json"
          },
          "List direct children folders under parent folder example": {
            "$ref": "./examples/platform/ListDirectChildrenFoldersUnderParentFolder.json"
          },
          "List all folders in workspace with continuation example": {
            "$ref": "./examples/platform/ListFoldersInWorkspaceWithContinuation.json"
          }
        }
      },
      "post": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nCreates a folder in the specified workspace.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Folders"
        ],
        "operationId": "Folders_CreateFolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "createFolderRequest",
            "description": "Create folder request payload.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/CreateFolderRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/Folder"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* FolderDisplayNameAlreadyInUse - Folder display name is already used.\n\n* FolderNotFound - The requested folder was not found in the workspace.\n\n* InvalidFolderDisplayName - The provided folder display name is invalid.\n\n* FolderDepthOutOfRange - The parent folder has achieved max depth, can't create a new subfolder.\n\n* WorkspaceNotSupported - The specified workspace type doesn't support Folder\n\n.* TooManyFolders - The specified workspace has reached the max count of folders, can't create any more.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a folder with the workspace as its parent folder example": {
            "$ref": "./examples/platform/CreateFolderWithWorkspaceAsParentFolder.json"
          },
          "Create a folder under another folder example": {
            "$ref": "./examples/platform/CreateFolderUnderAnotherFolder.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/folders/{folderId}": {
      "get": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nReturns the properties of the specified folder.",
        "description": "## Permissions\n\n The caller must have *viewer* or higher role on the workspace. \n\n## Required Delegated Scopes\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Folders"
        ],
        "operationId": "Folders_GetFolder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "folderId",
            "description": "The folder ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/Folder"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* FolderNotFound - The requested folder was not found in the workspace.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a folder example": {
            "$ref": "./examples/platform/GetFolder.json"
          }
        }
      },
      "patch": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nUpdates the properties of the specified folder.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher role on the workspace.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Folders"
        ],
        "operationId": "Folders_UpdateFolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "folderId",
            "description": "The folder ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateFolderRequest",
            "description": "Update folder request payload.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/UpdateFolderRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/Folder"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* FolderNotFound - The requested folder was not found in the workspace.\n\n* FolderDisplayNameAlreadyInUse - Folder display name is already used.\n\n* InvalidFolderDisplayName - The provided folder name is invalid, such as including invalid chars.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a folder example": {
            "$ref": "./examples/platform/UpdateFolder.json"
          }
        }
      },
      "delete": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nDeletes the specified folder.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Limitations \n- This API is supported only for the empty folder. Deleting a folder with any items or nested folders inside is not allowed, and returns a FolderNotEmpty error response.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Folders"
        ],
        "operationId": "Folders_DeleteFolder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "folderId",
            "description": "The folder ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* FolderNotFound - The requested folder was not found in the workspace.\n\n* FolderNotEmpty - The requested folder was not empty.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a folder example": {
            "$ref": "./examples/platform/DeleteFolder.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/folders/{folderId}/move": {
      "post": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nMoves the specified folder within the same workspace.",
        "description": "## Permissions\n\n The caller must have *contributor* or higher role on the workspace.\n\n## Required Delegated Scopes\n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Folders"
        ],
        "operationId": "Folders_MoveFolder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "folderId",
            "description": "The folder ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "moveFolderRequest",
            "description": "Move folder request payload.",
            "schema": {
              "$ref": "./definitions/platform.json#/definitions/MoveFolderRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/Folder"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* FolderNotFound - Could not find the requested folder.\n\n* FolderDepthOutOfRange - The parent folder has achieved max depth, can't create a new subfolder.\n\n* InfiniteFolderHierarchyLoop - The folder can't be moved into any of its descents.\n\n* FolderDisplayNameAlreadyInUse - Folder display name is already used.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Move a folder into another folder example": {
            "$ref": "./examples/platform/MoveFolderIntoAnotherFolder.json"
          },
          "Move a folder with the workspace as the destination example": {
            "$ref": "./examples/platform/MoveFolderWithWorkspaceAsDestination.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/managedPrivateEndpoints": {
      "get": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nReturns a list of managed private endpoints associated with the specified workspace.",
        "description": "## Permissions\n\n The caller must have *viewer* or higher workspace role. \n\n## Required Delegated Scopes\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_ListWorkspaceManagedPrivateEndpoints",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/managedPrivateEndpoint.json#/definitions/ManagedPrivateEndpoints"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List managed private endpoints in workspace example": {
            "$ref": "./examples/managedPrivateEndpoint/ListManagedPrivateEndpointsInWorkspace.json"
          },
          "List managed private endpoints in workspace with continuation example": {
            "$ref": "./examples/managedPrivateEndpoint/ListManagedPrivateEndpointsInWorkspaceWithContinuation.json"
          }
        }
      },
      "post": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nCreates a managed private endpoint in the specified workspace.",
        "description": "## Permissions\n\nThe caller must have *admin* workspace role.\n\n## Required Delegated Scopes \n\nWorkspace.ReadWrite.All.\n\n## Limitations \n- To create managed private endpoint the workspace must be on a supported Fabric capacity. For more information see: [Microsoft Fabric license types](/fabric/enterprise/licenses#microsoft-fabric-license-types).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_CreateWorkspaceManagedPrivateEndpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "createManagedPrivateEndpointRequest",
            "description": "Create managed private endpoint request payload.",
            "schema": {
              "$ref": "./definitions/managedPrivateEndpoint.json#/definitions/CreateManagedPrivateEndpointRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/managedPrivateEndpoint.json#/definitions/ManagedPrivateEndpoint"
            },
            "headers": {
              "Location": {
                "description": "The URL of the created managed private endpoint.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a managed private endpoint example": {
            "$ref": "./examples/managedPrivateEndpoint/CreateManagedPrivateEndpoint.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/managedPrivateEndpoints/{managedPrivateEndpointId}": {
      "delete": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nDeletes the specified managed private endpoint.",
        "description": "## Permissions\n\nThe caller must have *admin* workspace role.\n\n## Required Delegated Scopes \n\nWorkspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_DeleteWorkspaceManagedPrivateEndpoint",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "managedPrivateEndpointId",
            "description": "The managed private endpoint ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete managed private endpoint example": {
            "$ref": "./examples/managedPrivateEndpoint/DeleteManagedPrivateEndpoint.json"
          }
        }
      },
      "get": {
        "summary": "> [!NOTE]\n> This API is in preview.\n\nGets the specified managed private endpoint.",
        "description": "## Permissions\n\nThe caller must have *viewer* or higher workspace role. \n\n## Required Delegated Scopes \n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "ManagedPrivateEndpoints"
        ],
        "operationId": "ManagedPrivateEndpoints_GetWorkspaceManagedPrivateEndpoint",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "managedPrivateEndpointId",
            "description": "The managed private endpoint ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/managedPrivateEndpoint.json#/definitions/ManagedPrivateEndpoint"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get managed private endpoint example": {
            "$ref": "./examples/managedPrivateEndpoint/GetManagedPrivateEndpoint.json"
          }
        }
      }
    },
    "/connections": {
      "get": {
        "summary": "Returns a list of on-premises, virtual network and cloud connections the user has permission for.",
        "description": "## Permissions\n\nThe caller must have permission for the connection.\n\n## Required Delegated Scopes\n\nConnection.Read.All or Connection.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Connections"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "operationId": "Connections_ListConnections",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/ListConnectionsResponse"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example": {
            "$ref": "./examples/connections/ListConnections.json"
          }
        }
      },
      "post": {
        "summary": "Creates a connection.",
        "description": "To encrypt credentials, see [Configure credentials programmatically](/power-bi/developer/embedded/configure-credentials).\n\n## Permissions\n\n- If creating a gateway connection, the caller must have permissions for the gateway..\n- Service Principals must have permission granted by Fabric administrator. For more information see: [Service principals can create workspaces, connections, and deployment pipelines](/fabric/admin/service-admin-portal-developer#service-principals-can-create-workspaces-connections-and-deployment-pipelines). \n\n## Required Delegated Scopes\n\nConnection.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Connections"
        ],
        "operationId": "Connections_CreateConnection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createConnectionRequest",
            "description": "The request payload for creating the connection",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/CreateConnectionRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created. The operation was successful.",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/Connection"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* DuplicateConnectionName - The connection name is already in use.\n\n* InvalidConnectionDetails - The ConnectionDetails input provided is not valid.\n\n* InvalidCredentialDetails - The CredentialDetails input provided is not valid.\n\n* IncorrectCredentials - Failed to establish connection using the Credentials input.\n\n* CreateGatewayConnectionFailed - Failed to create gateway connection.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "On-premises gateway example": {
            "$ref": "./examples/connections/CreateOnPremisesGatewayConnection.json"
          },
          "Virtual network gateway example": {
            "$ref": "./examples/connections/CreateVirtualNetworkGatewayConnection.json"
          },
          "Cloud example": {
            "$ref": "./examples/connections/CreateCloudConnection.json"
          }
        }
      }
    },
    "/connections/{connectionId}": {
      "get": {
        "summary": "Get connection by ID.",
        "description": "## Permissions\n\nThe caller must have permission for the connection or admin permission for the gateway of the connection.\n\n## Required Delegated Scopes\n\nConnection.Read.All or Connection.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Connections"
        ],
        "operationId": "Connections_GetConnection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "description": "The ID of the connection.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/Connection"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* EntityNotFound - The requested resource could not be found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example": {
            "$ref": "./examples/connections/GetConnection.json"
          }
        }
      },
      "patch": {
        "summary": "Updates connection by ID.",
        "description": "To encrypt credentials, see [Configure credentials programmatically](/power-bi/developer/embedded/configure-credentials).\n\n## Permissions\n\nThe caller must have permission for the connection or admin permission for the gateway of the connection.\n\n## Required Delegated Scopes\n\nConnection.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Connections"
        ],
        "operationId": "Connections_UpdateConnection",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "description": "The ID of the connection.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateConnectionRequest",
            "description": "The request payload for updating the connection",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/UpdateConnectionRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/Connection"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* EntityNotFound - The requested resource could not be found.\n\n* InsufficientPermissionsToManageConnection - The caller has insufficient permissions to manage this connection.\n\n* DuplicateConnectionName - The connection name is already in use.\n\n* IncorrectCredentials - Failed to establish connection using the Credentials input.\n\n* UpdateGatewayConnectionFailed - Failed to update gateway connection.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "On-premises gateway example": {
            "$ref": "./examples/connections/UpdateOnPremisesGatewayConnection.json"
          },
          "On-premises gateway (personal mode) example": {
            "$ref": "./examples/connections/UpdateOnPremisesGatewayPersonalConnection.json"
          },
          "Virtual network gateway example": {
            "$ref": "./examples/connections/UpdateVirtualNetworkGatewayConnection.json"
          },
          "Shareable cloud example": {
            "$ref": "./examples/connections/UpdateShareableCloudConnection.json"
          },
          "Personal cloud example": {
            "$ref": "./examples/connections/UpdatePersonalCloudConnection.json"
          }
        }
      },
      "delete": {
        "summary": "Delete connection by ID.",
        "description": "## Permissions\n\nThe caller must have owner permission for the connection or admin permission for the gateway of the connection.\n\n## Required Delegated Scopes\n\nConnection.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Connections"
        ],
        "operationId": "Connections_DeleteConnection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "description": "The ID of the connection.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* EntityNotFound - The requested resource could not be found.\n\n* InsufficientPermissionsToManageConnection - The caller has insufficient permissions to manage this connection.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example": {
            "$ref": "./examples/connections/DeleteConnection.json"
          }
        }
      }
    },
    "/connections/supportedConnectionTypes": {
      "get": {
        "summary": "Lists supported connection types.",
        "description": "## Permissions\n\nIf called with gatewayId, the caller must have permission for the gateway.\n\n## Required Delegated Scopes\n\nConnection.Read.All or Connection.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Connections"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "operationId": "Connections_ListSupportedConnectionTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "gatewayId",
            "description": "The gateway to list supported connection types. If omitted, the API lists supported connection types in the cloud.",
            "type": "string",
            "required": false,
            "format": "uuid"
          },
          {
            "in": "query",
            "name": "showAllCreationMethods",
            "description": "Setting that controls whether to show all creation methods. True - Show all creation methods, False - Show only recommended creation methods.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/ListSupportedConnectionTypesResponse"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example": {
            "$ref": "./examples/connections/ListSupportedConnectionTypes.json"
          }
        }
      }
    },
    "/gateways": {
      "get": {
        "summary": "Returns a list of all gateways the user has permission for, including on-premises, on-premises (personal mode), and virtual network gateways.",
        "description": "## Permissions\n\nThe caller must have permissions for the gateway.\n\n## Required Delegated Scopes\n\nGateway.Read.All or Gateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "operationId": "Gateways_ListGateways",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/ListGatewaysResponse"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example": {
            "$ref": "./examples/gateways/ListGateways.json"
          }
        }
      },
      "post": {
        "summary": "Creates a gateway.",
        "description": "## Required Delegated Scopes\n\nGateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "operationId": "Gateways_CreateGateway",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createGatewayRequest",
            "description": "The request payload for creating the gateway",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/CreateGatewayRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created. The operation was successful.",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/Gateway"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* DuplicateGatewayName - The gateway name is already in use.\n\n* InvalidCapacityState - The Capacity's state is invalid.\n\n* InvalidCapacitySKU - The Capacity's SKU is invalid.\n\n* PowerPlatformVirtualNetworkSubnetNotConfiguredForDelegation - The Power Platform virtual network is not configured for delegation.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Virtual network gateway example": {
            "$ref": "./examples/gateways/CreateVirtualNetworkGateway.json"
          }
        }
      }
    },
    "/gateways/{gatewayId}": {
      "get": {
        "summary": "Get gateway by ID.",
        "description": "## Permissions\n\nThe caller must have permissions for the gateway.\n\n## Required Delegated Scopes\n\nGateway.Read.All or Gateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "operationId": "Gateways_GetGateway",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gatewayId",
            "description": "The ID of the gateway.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/Gateway"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* EntityNotFound - The requested resource could not be found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example": {
            "$ref": "./examples/gateways/GetGateway.json"
          }
        }
      },
      "patch": {
        "summary": "Updates gateway by ID.",
        "description": "## Permissions\n\nThe caller must have admin permission for the gateway.\n\n## Required Delegated Scopes\n\nGateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "operationId": "Gateways_UpdateGateway",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gatewayId",
            "description": "The ID of the gateway.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateGatewayRequest",
            "description": "The request payload for updating the gateway",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/UpdateGatewayRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/Gateway"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "On-premises gateway example": {
            "$ref": "./examples/gateways/UpdateOnPremisesGateway.json"
          },
          "Virtual network gateway example": {
            "$ref": "./examples/gateways/UpdateVirtualNetworkGateway.json"
          }
        }
      },
      "delete": {
        "summary": "Delete gateway by ID.",
        "description": "## Permissions\n\nThe caller must have admin permission for the gateway.\n\n## Required Delegated Scopes\n\nGateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "operationId": "Gateways_DeleteGateway",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gatewayId",
            "description": "The ID of the gateway.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* EntityNotFound - The requested resource could not be found.\n\n* InsufficientPermissionsToManageGateway - The caller has insufficient permissions to manage this gateway.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example": {
            "$ref": "./examples/gateways/DeleteGateway.json"
          }
        }
      }
    },
    "/gateways/{gatewayId}/members": {
      "get": {
        "summary": "Lists gateway members of an OnPremisesGateway by ID.",
        "description": "## Permissions\n\n- The caller must have permission for the gateway.\n\n## Required Delegated Scopes\n\nGateway.Read.All or Gateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "operationId": "Gateways_ListGatewayMembers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gatewayId",
            "description": "The ID of the gateway.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/ListGatewayMembersResponse"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* EntityNotFound - The requested resource could not be found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example": {
            "$ref": "./examples/gateways/ListGatewayMembers.json"
          }
        }
      }
    },
    "/gateways/{gatewayId}/members/{gatewayMemberId}": {
      "patch": {
        "summary": "Updates gateway member of an OnPremisesGateway by ID.",
        "description": "## Permissions\n\nThe caller must have admin permission for the gateway.\n\n## Required Delegated Scopes\n\nGateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "operationId": "Gateways_UpdateGatewayMember",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gatewayId",
            "description": "The ID of the gateway.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "gatewayMemberId",
            "description": "The ID of the gateway member.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateGatewayMemberRequest",
            "description": "The request payload for updating the gateway member",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/UpdateGatewayMemberRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/OnPremisesGatewayMember"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* EntityNotFound - The requested resource could not be found.\n\n* InsufficientPermissionsToManageGateway - The caller has insufficient permissions to manage this gateway.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example": {
            "$ref": "./examples/gateways/UpdateGatewayMember.json"
          }
        }
      },
      "delete": {
        "summary": "Delete gateway member of an OnPremisesGateway by ID.",
        "description": "## Permissions\n\nThe caller must have admin permission for the gateway.\n\n## Required Delegated Scopes\n\nGateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "operationId": "Gateways_DeleteGatewayMember",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gatewayId",
            "description": "The ID of the gateway.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "gatewayMemberId",
            "description": "The ID of the gateway member.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* EntityNotFound - The requested resource could not be found.\n\n* InsufficientPermissionsToManageGateway - The caller has insufficient permissions to manage this gateway.\n\n* CannotDeletePrimaryGatewayIfClusterMemberExists - Cannot delete the primary gateway while another member gateway exists.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example": {
            "$ref": "./examples/gateways/DeleteGatewayMember.json"
          }
        }
      }
    },
    "/gateways/{gatewayId}/roleAssignments": {
      "get": {
        "summary": "Returns a list of gateway role assignments.",
        "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Permissions\n\n- The caller must have *ConnectionCreator* or higher role on the gateway.\n\n## Required Delegated Scopes\n\nGateway.Read.All or Gateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "operationId": "Gateways_ListGatewayRoleAssignments",
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "parameters": [
          {
            "in": "path",
            "name": "gatewayId",
            "description": "The ID of the gateway.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/GatewayRoleAssignments"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List gateway role assignment example": {
            "$ref": "./examples/gateways/ListGatewayRoleAssignments.json"
          },
          "List gateway role assignment with continuation example": {
            "$ref": "./examples/gateways/ListGatewayRoleAssignmentsWithContinuation.json"
          }
        }
      },
      "post": {
        "summary": "Adds a gateway role assignment.",
        "description": "To get the principal user ID required for request body, see [Find the user ID](/partner-center/find-ids-and-domain-names#find-the-user-object-id).\n\n## Service Principal Profiles are not supported for Gateway Role Assignments. \n\n## Permissions\n\n- The caller must have *ConnectionCreatorWithResharing* or higher role on the gateway.\n\n## Required Delegated Scopes\n\nGateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "operationId": "Gateways_AddGatewayRoleAssignment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gatewayId",
            "description": "The ID of the gateway.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "addGatewayRoleAssignmentRequest",
            "description": "The request payload for adding a gateway role assignment",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/AddGatewayRoleAssignmentRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created.",
            "headers": {
              "Location": {
                "description": "The URL of the newly created gateway role assignment.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/GatewayRoleAssignment"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* BadRequest - Missing required parameter.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Add gateway role assignment example": {
            "$ref": "./examples/gateways/AddGatewayRoleAssignment.json"
          }
        }
      }
    },
    "/gateways/{gatewayId}/roleAssignments/{gatewayRoleAssignmentId}": {
      "get": {
        "summary": "Returns the principal's role assignment for the gateway.",
        "description": "To get the principal user ID required for request body, see [Find the user ID](/partner-center/find-ids-and-domain-names#find-the-user-object-id).\n\n## Permissions\n\n- The caller must have *ConnectionCreator* or higher role on the gateway.\n\n## Required Delegated Scopes\n\nGateway.Read.All or Gateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "operationId": "Gateways_GetGatewayRoleAssignment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gatewayId",
            "in": "path",
            "required": true,
            "description": "The ID of the gateway",
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "path",
            "name": "gatewayRoleAssignmentId",
            "description": "The ID of the gateway role assignment.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/GatewayRoleAssignment"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example": {
            "$ref": "./examples/gateways/GetGatewayRoleAssignment.json"
          }
        }
      },
      "patch": {
        "summary": "Updates the principal's role assignment for the gateway.",
        "description": "To get the principal user ID required for request body, see [Find the user ID](/partner-center/find-ids-and-domain-names#find-the-user-object-id).\n\n## Permissions\n\n- The caller must have *Admin* role on the gateway.\n\n## Required Delegated Scopes\n\nGateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "operationId": "Gateways_UpdateGatewayRoleAssignment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gatewayId",
            "in": "path",
            "description": "The ID of the gateway",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "gatewayRoleAssignmentId",
            "in": "path",
            "description": "The ID of the role assignment",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "updateGatewayRoleAssignmentRequest",
            "description": "Update gateway role assignment request payload.",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/UpdateGatewayRoleAssignmentRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/gateways.json#/definitions/GatewayRoleAssignment"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update gateway role assignment example": {
            "$ref": "./examples/gateways/UpdateGatewayRoleAssignment.json"
          }
        }
      },
      "delete": {
        "summary": "Delete the specified role assignment for the gateway.",
        "description": "To get the principal user ID required for request body, see [Find the user ID](/partner-center/find-ids-and-domain-names#find-the-user-object-id).\n\n## Permissions\n\n- The caller must have *Admin* role on the gateway.\n\n## Required Delegated Scopes\n\nGateway.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Gateways"
        ],
        "operationId": "Gateways_DeleteGatewayRoleAssignment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "gatewayId",
            "in": "path",
            "description": "The ID of the gateway",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "gatewayRoleAssignmentId",
            "in": "path",
            "description": "The ID of the role assignment",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete gateway role assignment example": {
            "$ref": "./examples/gateways/DeleteGatewayRoleAssignment.json"
          }
        }
      }
    },
    "/connections/{connectionId}/roleAssignments": {
      "get": {
        "summary": "Returns a list of connection role assignments.",
        "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Permissions\n\n- The caller must have *User* or higher role on the connection or be an *Admin* on the gateway that's bound to the connection.\n\n## Required Delegated Scopes\n\nConnection.Read.All or Connection.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Connections"
        ],
        "operationId": "Connections_ListConnectionRoleAssignments",
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "description": "The ID of the connection.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The operation was successful.",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/ConnectionRoleAssignments"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List connection role assignment example": {
            "$ref": "./examples/connections/ListConnectionRoleAssignments.json"
          },
          "List connection role assignment with continuation example": {
            "$ref": "./examples/connections/ListConnectionRoleAssignmentsWithContinuation.json"
          }
        }
      },
      "post": {
        "summary": "Adds a connection role assignment.",
        "description": "To get the principal user ID required for request body, see [Find the user ID](/partner-center/find-ids-and-domain-names#find-the-user-object-id).\n\n## Permissions\n\n- The caller must have *UserWithReshare* or higher role on the connection or be an *Admin* on the gateway that's bound to the connection.\n\n## Required Delegated Scopes\n\nConnection.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Connections"
        ],
        "operationId": "Connections_AddConnectionRoleAssignment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connectionId",
            "description": "The ID of the connection.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "addConnectionRoleAssignmentRequest",
            "description": "The request payload for adding a connection role assignment",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/AddConnectionRoleAssignmentRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created.",
            "headers": {
              "Location": {
                "description": "The URL of the newly created connection role assignment.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/ConnectionRoleAssignment"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* BadRequest - Missing required parameter.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Add connection role assignment example": {
            "$ref": "./examples/connections/AddConnectionRoleAssignment.json"
          }
        }
      }
    },
    "/connections/{connectionId}/roleAssignments/{connectionRoleAssignmentId}": {
      "get": {
        "summary": "Returns the principal's role assignment for the connection.",
        "description": "To get the principal user ID required for request body, see [Find the user ID](/partner-center/find-ids-and-domain-names#find-the-user-object-id).\n\n## Permissions\n\n- The caller must have *User* or higher role on the connection or be an *Admin* on the gateway that's bound to the connection.\n\n## Required Delegated Scopes\n\nConnection.Read.All or Connection.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Connections"
        ],
        "operationId": "Connections_GetConnectionRoleAssignment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "description": "The ID of the connection",
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "connectionRoleAssignmentId",
            "in": "path",
            "required": true,
            "description": "The ID of the connection role assignment",
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/ConnectionRoleAssignment"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Example": {
            "$ref": "./examples/connections/GetConnectionRoleAssignment.json"
          }
        }
      },
      "patch": {
        "summary": "Updates the principal's role assignment for the connection.",
        "description": "To get the principal user ID required for request body, see [Find the user ID](/partner-center/find-ids-and-domain-names#find-the-user-object-id).\n\n## Permissions\n\n- The caller must be an *Owner* of the connection or be an *Admin* on the gateway that's bound to the connection.\n\n## Required Delegated Scopes\n\nConnection.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Connections"
        ],
        "operationId": "Connections_UpdateConnectionRoleAssignment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "description": "The ID of the connection",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "connectionRoleAssignmentId",
            "in": "path",
            "description": "The ID of the role assignment",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "in": "body",
            "name": "updateConnectionRoleAssignmentRequest",
            "description": "Update connection role assignment request payload.",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/UpdateConnectionRoleAssignmentRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions/connections.json#/definitions/ConnectionRoleAssignment"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update connection role assignment example": {
            "$ref": "./examples/connections/UpdateConnectionRoleAssignment.json"
          }
        }
      },
      "delete": {
        "summary": "Delete the specified role assignment for the connection.",
        "description": "To get the principal user ID required for request body, see [Find the user ID](/partner-center/find-ids-and-domain-names#find-the-user-object-id).\n\n## Permissions\n\n- The caller must be an *Owner* of the connection or be an *Admin* on the gateway that's bound to the connection.\n\n## Required Delegated Scopes\n\nConnection.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Connections"
        ],
        "operationId": "Connections_DeleteConnectionRoleAssignment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "description": "The ID of the connection",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "connectionRoleAssignmentId",
            "in": "path",
            "description": "The ID of the role assignment",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* UnknownError - An error occurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete connection role assignment example": {
            "$ref": "./examples/connections/DeleteConnectionRoleAssignment.json"
          }
        }
      }
    }
  },
  "responses": {},
  "security": [],
  "tags": []
}
