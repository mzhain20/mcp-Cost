{
  "swagger": "2.0",
  "info": {
    "title": "SparkJobDefinition REST APIs",
    "version": "v1"
  },
  "schemes": [
    "https"
  ],
  "host": "api.fabric.microsoft.com",
  "basePath": "/v1",
  "paths": {
    "/workspaces/{workspaceId}/sparkJobDefinitions": {
      "get": {
        "summary": "Returns a list of spark job definitions from the specified workspace.",
        "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Permissions\n\nThe caller must have a *viewer* workspace role.\n\n## Required Delegated Scopes\n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_ListSparkJobDefinitions",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SparkJobDefinitions"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InvalidItemType - Invalid item type.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List spark job definitions in workspace example": {
            "$ref": "./examples/ListSparkJobDefinitionsInWorkspace.json"
          }
        }
      },
      "post": {
        "summary": "Creates a spark job definition in the specified workspace.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\n To create spark job definition with a public definition, refer to [Spark job definition](/rest/api/fabric/articles/item-management/definitions/spark-job-definition) article. \n\n## Permissions\n\nThe caller must have a *contributor* workspace role.\n\n## Required Delegated Scopes\n\n SparkJobDefinition.ReadWrite.All or Item.ReadWrite.All \n\n## Limitations \n- To create a spark job definition the workspace must be on a supported Fabric capacity. For more information see: [Microsoft Fabric license types](/fabric/enterprise/licenses#microsoft-fabric-license-types).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_CreateSparkJobDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "createSparkJobDefinitionRequest",
            "description": "Create item request payload.",
            "schema": {
              "$ref": "./definitions.json#/definitions/CreateSparkJobDefinitionRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "./definitions.json#/definitions/SparkJobDefinition"
            }
          },
          "202": {
            "description": "Request accepted, spark job definition provisioning in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID which can be used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InvalidItemType - Item type is invalid\n\n* ItemDisplayNameAlreadyInUse - Item display name is already used.\n\n* CorruptedPayload - The provided payload is corrupted.\n\n* WorkspaceItemsLimitExceeded - Workspace item limit exceeded.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a spark job definition example": {
            "$ref": "./examples/CreateSparkJobDefinitionWithoutDefinition.json"
          },
          "Create a spark job definition with public definition example": {
            "$ref": "./examples/CreateSparkJobDefinition.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/sparkJobDefinitions/{sparkJobDefinitionId}": {
      "get": {
        "summary": "Returns properties of the specified spark job definition.",
        "description": "## Permissions\n\n The caller must have *read* permissions for the spark job definition.\n\n## Required Delegated Scopes\n\n SparkJobDefinition.Read.All or SparkJobDefinition.ReadWrite.All or Item.Read.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_GetSparkJobDefinition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "sparkJobDefinitionId",
            "description": "The spark job definition ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SparkJobDefinition"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a spark job definition example": {
            "$ref": "./examples/GetSparkJobDefinition.json"
          }
        }
      },
      "patch": {
        "summary": "Updates the properties of the specified spark job definition.",
        "description": "## Permissions\n\nThe caller must have *read and write* permissions for the spark job definition.\n\n## Required Delegated Scopes\n\n SparkJobDefinition.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_UpdateSparkJobDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "sparkJobDefinitionId",
            "description": "The spark job definition ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateSparkJobDefinitionRequest",
            "description": "Update spark job definition request payload.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UpdateSparkJobDefinitionRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SparkJobDefinition"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found. \n\n* InvalidRequest - Invalid update request.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a spark job definition example": {
            "$ref": "./examples/UpdateSparkJobDefinition.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes the specified spark job definition.",
        "description": "## Permissions\n\nThe caller must have *write* permissions for the spark job definition.\n\n## Required Delegated Scopes\n\n SparkJobDefinition.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_DeleteSparkJobDefinition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "sparkJobDefinitionId",
            "description": "The spark job definition ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a spark job definition example": {
            "$ref": "./examples/DeleteSparkJobDefinition.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/sparkJobDefinitions/{sparkJobDefinitionId}/getDefinition": {
      "post": {
        "summary": "Returns the specified spark job definition public definition.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\nWhen you get a spark job definition's public definition, the sensitivity label is not a part of the definition.\n\n## Permissions\n\nThe caller must have *read and write* permissions for the spark job definition.\n\n## Required Delegated Scopes\n\n SparkJobDefinition.ReadWrite.All or Item.ReadWrite.All \n\n## Limitations\n\n This API is blocked for a spark job definition with an encrypted sensitivity label.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_GetSparkJobDefinitionDefinition",
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "sparkJobDefinitionId",
            "description": "The spark job definition ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "format",
            "description": "The format of the spark job definition public definition.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/SparkJobDefinitionDefinitionResponse"
            }
          },
          "202": {
            "description": "Request accepted. Retrieving the definition is in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID which can be used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* OperationNotSupportedForItem - Operation not supported for requested item.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a spark job definition public definition example": {
            "$ref": "./examples/GetSparkJobDefinitionDefinition.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/sparkJobDefinitions/{sparkJobDefinitionId}/updateDefinition": {
      "post": {
        "summary": "Overrides the definition for the specified spark job definition.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\n \nUpdating the spark job definition's definition, does not affect its sensitivity label. \n\n## Permissions\n\nThe caller must have *read and write* permissions for the spark job definition.\n\n## Required Delegated Scopes\n\n SparkJobDefinition.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_UpdateSparkJobDefinitionDefinition",
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "sparkJobDefinitionId",
            "description": "The spark job definition ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "updateMetadata",
            "description": "When set to true and the .platform file is provided as part of the definition, the item's metadata is updated using the metadata in the .platform file",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "updateSparkJobDefinitionDefinitionRequest",
            "description": "Update spark job definition definition request payload.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UpdateSparkJobDefinitionDefinitionRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "202": {
            "description": "Request accepted. Update definition is in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID which can be used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* OperationNotSupportedForItem - Operation not supported for requested item. \n\n* CorruptedPayload - The provided payload is corrupted.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a spark job definition public definition example": {
            "$ref": "./examples/UpdateSparkJobDefinitionDefinition.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/sparkJobDefinitions/{sparkJobDefinitionId}/jobs/instances?jobType=sparkjob": {
      "post": {
        "summary": "Run on-demand [Spark job definition](/fabric/data-engineering/run-spark-job-definition) job instance.",
        "description": "## Required Delegated Scopes\n\nSparkJobDefinition.Execute.All or Item.Execute.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "BackgroundJobs"
        ],
        "operationId": "BackgroundJobs_RunOnDemandSparkJobDefinition",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "sparkJobDefinitionId",
            "description": "The Spark job definition item ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "jobType",
            "description": "The supported job type for Spark job definition is `sparkjob`.",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "runSparkJobDefinitionRequest",
            "description": "Run spark job definition request payload with parameters to use.",
            "schema": {
              "$ref": "./definitions.json#/definitions/RunSparkJobDefinitionRequest"
            },
            "required": false
          }
        ],
        "responses": {
          "202": {
            "description": "Request accepted, job execution is in progress.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The URL to the job instance resource."
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* MissingMinimalPermissions - The caller does not have sufficient permissions to run job instance. n\n* InvalidJobType - The requested job type is invalid. \n\n* TooManyRequestsForJobs - The caller is making to many run on-demand job requests. \n\n* ItemNotFound - Requested item id not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Run SparkJobDefinition with no request body.": {
            "$ref": "./examples/RunOnDemandSparkJobDefinitionNoBody.json"
          },
          "Run SparkJobDefinition with request body.": {
            "$ref": "./examples/RunOnDemandSparkJobDefinitionWithBody.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/sparkJobDefinitions/{sparkJobDefinitionId}/livySessions": {
      "get": {
        "tags": [
          "LivySessions"
        ],
        "summary": "Returns a list of livy sessions from the specified item identifier.",
          "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Permissions\n\n The caller must have *viewer* or higher workspace role. \n\n## Required Delegated Scopes \n\n SparkJobDefinition.Read.All or SparkJobDefinition.ReadWrite.All or Item.Read.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "operationId": "LivySessions_ListLivySessions",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sparkJobDefinitionId",
            "description": "The sparkJobDefinition ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Token to retrieve the next page of results, if available.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Returns a list of all livy sessions associated to an itemId.",
            "schema": {
              "$ref": "../common/spark_definitions.json#/definitions/LivySessions"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* SparkCoreItemNotFound - SparkJobDefinition identifier does not exist\n\n* SparkCoreUnexpectedException - Unhandled exception ocurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List all livy sessions example": {
            "$ref": "./examples/ListSessionsInItemId.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/sparkJobDefinitions/{sparkJobDefinitionId}/livySessions/{livyId}": {
      "get": {
        "tags": [
          "LivySessions"
        ],
        "operationId": "LivySessions_GetLivySession",
        "summary": "Returns properties of the specified livy session.",
          "description": "## Permissions\n\n The caller must have *viewer* or higher workspace role. \n\n## Required Delegated Scopes \n\n SparkJobDefinition.Read.All or SparkJobDefinition.ReadWrite.All or Item.Read.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace identifier.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "sparkJobDefinitionId",
            "description": "The sparkJobDefinition ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "livyId",
            "description": "The session identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Returns a livy session by its id.",
            "schema": {
              "$ref": "../common/spark_definitions.json#/definitions/LivySession"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* SparkCoreSessionNotFound - Livy identifier does not exist\n\n* SparkCoreUnexpectedException - Unhandled exception ocurred.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a livy session example": {
            "$ref": "./examples/GetSessionInItemId.json"
          }
        }
      }
    }
  },
  "responses": {},
  "security": [],
  "tags": []
}
