{
  "swagger": "2.0",
  "info": {
    "title": "Notebook REST APIs",
    "version": "v1"
  },
  "schemes": [
    "https"
  ],
  "host": "api.fabric.microsoft.com",
  "basePath": "/v1",
  "paths": {
    "/workspaces/{workspaceId}/notebooks": {
      "get": {
        "summary": "Returns a list of notebooks from the specified workspace.",
        "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Permissions\n\n The caller must have a *viewer* workspace role. \n\n## Required Delegated Scopes \n\nWorkspace.Read.All or Workspace.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_ListNotebooks",
        "x-ms-pageable": {
          "nextLinkName": "continuationUri"
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "A token for retrieving the next page of results.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/Notebooks"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InvalidItemType - Invalid item type.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List notebooks in workspace example": {
            "$ref": "./examples/ListNotebooksInWorkspace.json"
          }
        }
      },
      "post": {
        "summary": "Creates a notebook in the specified workspace.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\n To create notebook with definition, refer to [Notebook definition](/rest/api/fabric/articles/item-management/definitions/notebook-definition) article. \n\n ## Permissions \n The caller must have a *contributor* workspace role. \n\n## Required Delegated Scopes \n\n Notebook.ReadWrite.All or Item.ReadWrite.All \n\n## Limitations \n- To create a notebook the workspace must be on a supported Fabric capacity. For more information see: [Microsoft Fabric license types](/fabric/enterprise/licenses#microsoft-fabric-license-types).\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_CreateNotebook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "createNotebookRequest",
            "description": "Create item request payload.",
            "schema": {
              "$ref": "./definitions.json#/definitions/CreateNotebookRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "./definitions.json#/definitions/Notebook"
            }
          },
          "202": {
            "description": "Request accepted, notebook provisioning in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID which can be used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* InvalidItemType - Item type is invalid\n\n* ItemDisplayNameAlreadyInUse - Item display name is already used. \n\n* CorruptedPayload - The provided payload is corrupted. \n\n* WorkspaceItemsLimitExceeded - Workspace item limit exceeded.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a notebook example": {
            "$ref": "./examples/CreateNotebookWithoutDefinition.json"
          },
          "Create a notebook with public definition in ipynb format example": {
            "$ref": "./examples/CreateNotebookWithIpynb.json"
          },
          "Create a notebook with public definition in fabricGitSource format example": {
            "$ref": "./examples/CreateNotebookWithFabricGitSource.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/notebooks/{notebookId}": {
      "get": {
        "summary": "Returns properties of the specified notebook.",
        "description": "## Permissions\n\n The caller must have *read* permissions for the notebook. \n\n## Required Delegated Scopes \n\n Notebook.Read.All or Notebook.ReadWrite.All or Item.Read.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_GetNotebook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "notebookId",
            "description": "The notebook ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/Notebook"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a notebook example": {
            "$ref": "./examples/GetNotebook.json"
          }
        }
      },
      "patch": {
        "summary": "Updates the properties of the specified notebook.",
        "description": "## Permissions\n\n The caller must have *read and write* permissions for the notebook. \n\n## Required Delegated Scopes \n\n Notebook.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_UpdateNotebook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "notebookId",
            "description": "The notebook ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "body",
            "name": "updateNotebookRequest",
            "description": "Update notebook request payload.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UpdateNotebookRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/Notebook"
            }
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found. \n\n* InvalidRequest - Invalid update request",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a notebook example": {
            "$ref": "./examples/UpdateNotebook.json"
          }
        }
      },
      "delete": {
        "summary": "Deletes the specified notebook.",
        "description": "## Permissions\n\n The caller must have *write* permissions for the notebook. \n\n## Required Delegated Scopes \n\n Notebook.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_DeleteNotebook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "notebookId",
            "description": "The notebook ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "default": {
            "description": "Common error codes:\n\n* ItemNotFound - The requested item was not found.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a notebook example": {
            "$ref": "./examples/DeleteNotebook.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/notebooks/{notebookId}/getDefinition": {
      "post": {
        "summary": "Returns the specified notebook public definition.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\nWhen you get a notebook's public definition, the sensitivity label is not a part of the definition.\n\n## Permissions\n\n The caller must have *read and write* permissions for the notebook. \n\n## Required Delegated Scopes \n\n Notebook.ReadWrite.All or Item.ReadWrite.All \n\n## Limitations\n\n This API is blocked for a notebook with an encrypted sensitivity label.\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_GetNotebookDefinition",
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "notebookId",
            "description": "The notebook ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "format",
            "description": "The format of the notebook public definition. Supported format: `ipynb` and `fabricGitSource`. If no format is provided, `fabricGitSource` is used.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully.",
            "schema": {
              "$ref": "./definitions.json#/definitions/NotebookDefinitionResponse"
            }
          },
          "202": {
            "description": "Request accepted. Retrieving the definition is in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID which can be used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* OperationNotSupportedForItem - Operation not supported for requested item.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get a notebook definition in fabricGitSource format example": {
            "$ref": "./examples/GetNotebookDefinitionWithFabricGitSource.json"
          },
          "Get a notebook definition in ipynb format example": {
            "$ref": "./examples/GetNotebookDefinitionWithIpynb.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/notebooks/{notebookId}/updateDefinition": {
      "post": {
        "summary": "Overrides the definition for the specified notebook.",
        "description": "This API supports [long running operations (LRO)](/rest/api/fabric/articles/long-running-operation).\n\n \nUpdating the notebook's definition, does not affect its sensitivity label. \n\n## Permissions\n\n The caller must have *read and write* permissions for the notebook. \n## Required Delegated Scopes \n\n Notebook.ReadWrite.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
        "tags": [
          "Items"
        ],
        "operationId": "Items_UpdateNotebookDefinition",
        "produces": [
          "application/json"
        ],
        "x-ms-fabric-sdk-long-running-operation": true,
        "parameters": [
          {
            "in": "path",
            "name": "workspaceId",
            "description": "The workspace ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "path",
            "name": "notebookId",
            "description": "The notebook ID.",
            "type": "string",
            "format": "uuid",
            "required": true
          },
          {
            "in": "query",
            "name": "updateMetadata",
            "description": "When set to true and the .platform file is provided as part of the definition, the item's metadata is updated using the metadata in the .platform file",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "updateNotebookDefinitionRequest",
            "description": "Update notebook definition request payload.",
            "schema": {
              "$ref": "./definitions.json#/definitions/UpdateNotebookDefinitionRequest"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request completed successfully."
          },
          "202": {
            "description": "Request accepted. Update definition is in progress.",
            "headers": {
              "Location": {
                "description": "The URL of the operation status, which can be used to track the operation state.",
                "type": "string"
              },
              "x-ms-operation-id": {
                "description": "The operation ID which can be used with long running operations (LRO) APIs to track the operation state and get the result.",
                "type": "string",
                "format": "uuid"
              },
              "Retry-After": {
                "type": "integer",
                "description": "The number of seconds to wait before retrying the request."
              }
            }
          },
          "default": {
            "description": "Common error codes:\n\n* OperationNotSupportedForItem - Operation not supported for requested item. \n\n* CorruptedPayload - The provided payload is corrupted.",
            "schema": {
              "$ref": "../common/definitions.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update a notebook definition in fabricGitSource format example": {
            "$ref": "./examples/UpdateNotebookDefinitionWithFabricGitSource.json"
          },
          "Update a notebook definition in ipynb format example": {
            "$ref": "./examples/UpdateNotebookDefinitionWithIpynb.json"
          }
        }
      }
    },
    "/workspaces/{workspaceId}/notebooks/{notebookId}/livySessions": {
            "get": {
                "tags": [
                    "LivySessions"
                ],
                "summary": "Returns a list of livy sessions from the specified item identifier.",
                "description": "This API supports [pagination](/rest/api/fabric/articles/pagination).\n\n## Permissions\n\n The caller must have *viewer* or higher workspace role. \n\n## Required Delegated Scopes \n\n Notebook.Read.All or Notebook.ReadWrite.All or Item.Read.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
                "operationId": "LivySessions_ListLivySessions",
                "x-ms-pageable": {
                    "nextLinkName": "continuationUri"
                },
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "workspaceId",
                        "description": "The workspace identifier.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "notebookId",
                        "description": "The notebook ID.",
                        "type": "string",
                        "format": "uuid",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "continuationToken",
                        "description": "Token to retrieve the next page of results, if available.",
                        "type": "string",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK -- Returns a list of all livy sessions associated to an itemId.",
                        "schema": {
                            "$ref": "../common/spark_definitions.json#/definitions/LivySessions"
                        }
                    },
                    "default": {
                        "description": "Common error codes:\n\n* SparkCoreItemNotFound - Notebook identifier does not exist\n\n* SparkCoreUnexpectedException - Unhandled exception ocurred.",
                        "schema": {
                            "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-examples": {
                    "List all livy sessions example": {
                        "$ref": "./examples/ListSessionsInItemId.json"
                    }
                }
            }
    },
    "/workspaces/{workspaceId}/notebooks/{notebookId}/livySessions/{livyId}": {
        "get": {
            "tags": [
                "LivySessions"
            ],
            "operationId": "LivySessions_GetLivySession",
            "summary": "Returns properties of the specified livy session.",
            "description": "## Permissions\n\n The caller must have *viewer* or higher workspace role. \n\n## Required Delegated Scopes \n\n Notebook.Read.All or Notebook.ReadWrite.All or Item.Read.All or Item.ReadWrite.All\n\n## Microsoft Entra supported identities\n\nThis API supports the Microsoft [identities](/rest/api/fabric/articles/identity-support) listed in this section.\n\n| Identity | Support |\n|-|-|\n| User | Yes |\n| [Service principal](/entra/identity-platform/app-objects-and-service-principals#service-principal-object) and [Managed identities](/entra/identity/managed-identities-azure-resources/overview) | Yes |\n\n## Interface",
            "produces": [
                "application/json"
            ],
            "parameters": [
                {
                    "in": "path",
                    "name": "workspaceId",
                    "description": "The workspace identifier.",
                    "type": "string",
                    "required": true
                },
                {
                    "in": "path",
                    "name": "notebookId",
                    "description": "The notebook ID.",
                    "type": "string",
                    "format": "uuid",
                    "required": true
                },
                {
                    "in": "path",
                    "name": "livyId",
                    "description": "The session identifier.",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "OK -- Returns a livy session by its id.",
                    "schema": {
                        "$ref": "../common/spark_definitions.json#/definitions/LivySession"
                    }
                },
                "default": {
                    "description": "Common error codes:\n\n* SparkCoreSessionNotFound - Livy identifier does not exist\n\n* SparkCoreUnexpectedException - Unhandled exception ocurred.",
                    "schema": {
                        "$ref": "../common/definitions.json#/definitions/ErrorResponse"
                    }
                }
            },
            "x-ms-examples": {
                "Get a livy session example": {
                    "$ref": "./examples/GetSessionInItemId.json"
                }
            }
        }
    }
  },
  "responses": {},
  "security": [],
  "tags": []
}