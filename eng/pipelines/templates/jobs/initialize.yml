parameters:
- name: DynamicPrereleaseVersion
  type: boolean
- name: ServerName
  type: string

jobs:
- job: Initialize
  timeoutInMinutes: 90
  steps:
  - checkout: self
    fetchDepth: 0

  - task: UseDotNet@2
    displayName: "Use .NET SDK from global.json"
    retryCountOnTaskFailure: 3
    inputs:
      useGlobalJson: true

  - pwsh: |
      Write-Host "Attaching build reason string to the build for additional tag generation."
      @('$(Build.Reason)') | ConvertTo-Json -AsArray | Out-File -FilePath $(System.DefaultWorkingDirectory)/build-reason.json -Encoding utf8
      Write-Host '##vso[task.addattachment type=AdditionalTags;name=AdditionalTags;]$(System.DefaultWorkingDirectory)/build-reason.json'
    displayName: Tag build reason

  - pwsh: >
      ./eng/scripts/Get-ToolsToTest.ps1
      -SetDevOpsVariables
      -TestType 'Live'
      -ServerName '${{ iif(eq(parameters.ServerName, 'none'), '', parameters.ServerName) }}'
    name: GetTestPathsLive
    displayName: "Get paths to test (Live)"
    workingDirectory: $(Build.SourcesDirectory)

  - pwsh: |
      $buildId = $env:BUILD_BUILDID
      $buildReason = $env:BUILD_REASON
      $sourceBranch = $env:BUILD_SOURCEBRANCH
      $setDevVersion = $env:SETDEVVERSION -eq 'true'
      $dynamicPrereleaseVersion = $env:DYNAMIC -eq 'true'

      $shouldSetSuffix = $setDevVersion -or $dynamicPrereleaseVersion

      $label = $buildReason -eq 'IndividualCI' -and $sourceBranch -eq 'refs/heads/main' ? 'beta' : 'alpha'
      $suffix = $shouldSetSuffix ? "-$label.$buildId" : ''

      Write-Host "Setting version suffix to '$suffix'"
      Write-Host "##vso[task.setvariable variable=VersionSuffix;isOutput=true]$suffix"
    name: GetVersion
    displayName: "Get version suffix"
    env:
      DYNAMIC: ${{ parameters.DynamicPrereleaseVersion }}
